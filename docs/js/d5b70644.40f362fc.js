(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["d5b70644"],{"076d":function(e,t,n){"use strict";var a=n("5505"),i=n.n(a);i.a},"0868":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    short-weekday-label\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},"0d54":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    show-work-weeks\n    view="month"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},"0f88e":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div style="overflow: hidden">\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n      v-touch-swipe.mouse.left.right="handleSwipe"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n      style="height: 400px; overflow: hidden"\n    />\n  </div>\n</template>\n\n<script>\nimport { stopAndPrevent } from \'quasar/src/utils/event\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\',\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === \'right\') {\n            this.calendarPrev()\n          } else if (info.direction === \'left\') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      stopAndPrevent(evt)\n    }\n  }\n}\n<\/script>\n'},1053:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    show-day-of-year-label\n    view="month"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},"129e":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    short-month-label\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},1882:function(e,t,n){"use strict";n.r(t),t["default"]="<template>\n  <q-calendar\n    v-model=\"selectedDate\"\n    view=\"month\"\n    locale=\"en-us\"\n    style=\"height: 500px;\"\n  >\n    <template #day=\"{ date }\">\n      <template v-for=\"(event, index) in getEvents(date)\">\n        <q-badge\n          :key=\"index\"\n          style=\"width: 100%; cursor: pointer;\"\n          class=\"ellipsis\"\n          :class=\"badgeClasses(event, 'day')\"\n          :style=\"badgeStyles(event, 'day')\"\n        >\n          <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n        </q-badge>\n      </template>\n    </template>\n  </q-calendar>\n</template>\n\n<script>\nimport { date, colors } from 'quasar'\n\nexport default {\n  data () {\n    return {\n      selectedDate: '2019-04-08',\n      events: [\n        {\n          title: 'April Fools Day',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: '2019-04-01',\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: '2019-04-04',\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: '2019-04-08',\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: '2019-04-08',\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: '2019-04-20',\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: '2019-04-22',\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: '2019-04-22',\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: '2019-04-27',\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: '2019-04-29',\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = colors.luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = new Date(this.events[i].date + ' ' + this.events[i].time)\n              const endTime = date.addToDate(startTime, { minutes: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = new Date(events[j].date + ' ' + events[j].time)\n                const endTime2 = date.addToDate(startTime2, { minutes: events[j].duration })\n                if (date.isBetweenDates(startTime, startTime2, endTime2) || date.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = new Date(this.events[i].date)\n          const endDate = date.addToDate(startDate, { days: this.events[i].days })\n          if (date.isBetweenDates(dt, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n"},"1ab9":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5, 6, 0]"\n    view="month"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},"1c0b":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div>\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n      style="height: 400px; overflow: hidden"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},2794:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    :hide-header="true"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},4882:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div style="overflow: auto">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      :disabled-days="disabledDays"\n      :day-style="modifiedStyle"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\',\n      disabledDays: [\n        \'2019-04-02\',\n        \'2019-04-03\',\n        \'2019-04-04\',\n        \'2019-04-05\'\n      ]\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: \'#ffcb9c!important\'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n'},5505:function(e,t,n){},"658e":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"q-markdown"},[a("example-title",{attrs:{title:"Basic"}}),a("example-card",{attrs:{title:"Month View - Basic",name:"MonthViewBasic","tag-parts":e.getTagParts(n("f666").default)}}),a("example-title",{attrs:{title:"First Day Monday"}}),a("example-card",{attrs:{title:"Month View - First Day Monday",name:"MonthViewMondayFirstDay","tag-parts":e.getTagParts(n("1ab9").default)}}),a("example-title",{attrs:{title:"5 Day Work Week"}}),a("example-card",{attrs:{title:"Month View - 5 Day Work Week",name:"MonthViewFiveDayWorkWeek","tag-parts":e.getTagParts(n("6684").default)}}),a("example-title",{attrs:{title:"Hide Header"}}),a("example-card",{attrs:{title:"Month View - Hide Header",name:"MonthViewHideHeader","tag-parts":e.getTagParts(n("2794").default)}}),a("example-title",{attrs:{title:"Disabled Days"}}),a("example-card",{attrs:{title:"Month View - Disabled Days",name:"MonthViewDisabledDays","tag-parts":e.getTagParts(n("4882").default)}},[a("q-markdown",[e._v("\nWhen the property `disabled-days` has an array of disabled days, you can hook into the `day-style` property to change the background color of the disabled day.\n      ")])],1),a("example-title",{attrs:{title:"Now"}}),a("example-card",{attrs:{title:"Month View - Now",name:"MonthViewNow","tag-parts":e.getTagParts(n("87fc").default)}}),a("example-title",{attrs:{title:"Work Weeks"}}),a("example-card",{attrs:{title:"Month View - Work Weeks",name:"MonthViewWorkWeekNumbers","tag-parts":e.getTagParts(n("0d54").default)}},[a("q-markdown",[e._v("\n`show-work-weeks` is available only for month view.\n      ")])],1),a("example-title",{attrs:{title:"Short Weekday Label"}}),a("example-card",{attrs:{title:"Month View - Short Weekday Label",name:"MonthViewShortWeekdayLabel","tag-parts":e.getTagParts(n("0868").default)}}),a("example-title",{attrs:{title:"Short Month Label"}}),a("example-card",{attrs:{title:"Month View - Short Month Label",name:"MonthViewShortMonthLabel","tag-parts":e.getTagParts(n("129e").default)}}),a("example-title",{attrs:{title:"Show Day of Year Label"}}),a("example-card",{attrs:{title:"Month View - Show Day of Year Label",name:"MonthViewShowDayOfYearLabel","tag-parts":e.getTagParts(n("1053").default)}},[a("q-markdown",[e._v("\n`show-day-of-year-label` is available only for month view.\n      ")])],1),a("example-title",{attrs:{title:"Day Height"}}),a("example-card",{attrs:{title:"Month View - Day Height",name:"MonthViewDayHeight","tag-parts":e.getTagParts(n("f2c8").default)}},[a("q-markdown",[e._v("\n`day-height` is available only for month view.\nThe example below is setting the `day-height` to `100`, the default is `0`, which tells the calendar component to figure out it's own height.\n      ")])],1),a("example-title",{attrs:{title:"Previous/Next"}}),a("example-card",{attrs:{title:"Month View - Prev/Next",name:"MonthViewPrevNext","tag-parts":e.getTagParts(n("1c0b").default)}}),a("example-title",{attrs:{title:"Swipe Navigation"}}),a("example-card",{attrs:{title:"Month View - Swipe",name:"MonthViewSwipe","tag-parts":e.getTagParts(n("0f88e").default)}}),a("example-title",{attrs:{title:"Selection"}}),a("example-card",{attrs:{title:"Multi-Day Selection",name:"MonthViewSelection","tag-parts":e.getTagParts(n("b7ff").default)}},[a("q-markdown",[e._v("\nThe example below shows how to use the QCalendar to create a multi-day selector. The critical aspect of this is the `selected-start-end-dates` property. This takes an array of two dates (the first should be less or equal to the last). This property really doesn't do much, except to keep the calendar reactive, so that the `day-style` property can be used to style the selected days.\n\nFor the example below, click a day, and while holding the mouse down, move to a different day. Keep in mind, this is just one way of handling multi-day selection. if you needed swipe navigation on a mobile, you could modify the code to have independent click on start and end days.\n\nKeep in mind that the functionality below won't work with swipe actions.\n      ")])],1),a("example-title",{attrs:{title:"Working with Slots"}}),a("q-markdown",[e._v("\nFor slots that return `day` or `timestamp`, it looks like this:\n```js\n{\n  date: '',       // YYYY-mm-dd\n  time: '',       // 00:00:00 (optional)\n  year: 0,        // YYYY\n  month: 0,       // mm (Jan = 1, etc)\n  day: 0,         // day of the month\n  weekday: 0,     // week day\n  hour: 0,        // 24-hr\n  minute: 0,      // mm\n  doy: 0,         // day of year\n  workweek: 0,    // workweek number\n  hasDay: false,  // if this timestamp is supposed to have a date\n  hasTime: false, // if this timestamp is supposed to have a time\n  past: false,    // if timestamp is in the past (based on `now` property)\n  current: false, // if timestamp is current date (based on `now` property)\n  future: false   // if timestamp is in the future (based on `now` property)\n}\n```\n    ")]),a("example-card",{attrs:{title:"Month View - Slots",name:"MonthViewSlots","tag-parts":e.getTagParts(n("1882").default)}})],1)},i=[],s=n("fe7d"),o=n("74ba"),r=n("8669"),l=n("ad53"),d={name:"MonthView",components:{ExampleTitle:s["a"],ExampleCard:o["a"]},data:function(){return{tempToc:[]}},mounted:function(){this.toc=[],this.tempToc=[],this.addToToc("Basic"),this.addToToc("Month View - Basic",2),this.addToToc("First Day Monday"),this.addToToc("Month View - First Day Monday",2),this.addToToc("5 Day Work Week"),this.addToToc("Month View - 5 Day Work Week",2),this.addToToc("Hide Header"),this.addToToc("Month View - Hide Header",2),this.addToToc("Disabled Days"),this.addToToc("Month View - Disabled Days",2),this.addToToc("Now"),this.addToToc("Month View - Now",2),this.addToToc("Work Weeks"),this.addToToc("Month View - Work Weeks",2),this.addToToc("Short Weekday Label"),this.addToToc("Month View - Short Weekday Label",2),this.addToToc("Short Month Label"),this.addToToc("Month View - Short Month Label",2),this.addToToc("Show Day of Year Label"),this.addToToc("Month View - Show Day of Year Label",2),this.addToToc("Day Height"),this.addToToc("Month View - Day Height",2),this.addToToc("Previous/Next"),this.addToToc("Month View - Prev/Next",2),this.addToToc("Swipe Navigation"),this.addToToc("Month View - Swipe",2),this.addToToc("Selection"),this.addToToc("Month View - Multi-Day Selection",2),this.addToToc("Working with Slots"),this.addToToc("Month View - Slots",2),this.toc=this.tempToc},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{getTagParts:l["c"],addToToc:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=Object(r["b"])(e);this.tempToc.push({children:[],id:n,label:e,level:t})}}},c=d,h=(n("076d"),n("2877")),p=Object(h["a"])(c,a,i,!1,null,null,null);t["default"]=p.exports},6684:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5]"\n    view="month"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},"74ba":function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"q-pa-md overflow-auto",attrs:{id:e.slugifiedTitle}},[n("q-card",{staticClass:"no-shadow",attrs:{flat:"",bordered:""}},[n("q-toolbar",[n("q-ribbon",{attrs:{position:"left",color:"rgba(0,0,0,.58)","background-color":"#c0c0c0","leaf-color":"#a0a0a0","leaf-position":"bottom",decoration:"rounded-out"}},[n("q-toolbar-title",{staticClass:"example-title",on:{click:function(t){return e.copyHeading(e.slugifiedTitle)}}},[n("span",{staticClass:"ellipsis"},[e._v(e._s(e.title))])])],1)],1),this.$slots.default?n("q-separator"):e._e(),this.$slots.default?n("q-card-section",[e._t("default")],2):e._e(),n("q-separator"),n("q-expansion-item",{attrs:{group:"someGroup",caption:"Code"}},[n("q-card",[n("q-tabs",{staticClass:"text-grey",attrs:{dense:"","active-color":"primary","indicator-color":"primary",align:"left","narrow-indicator":""},model:{value:e.tab,callback:function(t){e.tab=t},expression:"tab"}},[e.parts.template?n("q-tab",{attrs:{name:"template",label:"Template"}}):e._e(),e.parts.script?n("q-tab",{attrs:{name:"script",label:"Script"}}):e._e(),e.parts.style?n("q-tab",{attrs:{name:"style",label:"Style"}}):e._e()],1),n("q-separator"),n("q-tab-panels",{attrs:{animated:""},model:{value:e.tab,callback:function(t){e.tab=t},expression:"tab"}},[e.parts.template?n("q-tab-panel",{attrs:{name:"template"}},[n("q-markdown",{attrs:{src:e.parts.template}})],1):e._e(),e.parts.script?n("q-tab-panel",{attrs:{name:"script"}},[n("q-markdown",{attrs:{src:e.parts.script}})],1):e._e(),e.parts.style?n("q-tab-panel",{attrs:{name:"style"}},[n("q-markdown",{attrs:{src:e.parts.style}})],1):e._e()],1)],1)],1),n("q-separator"),n(e.name,{tag:"component",staticStyle:{overflow:"hidden"}})],1)],1)},i=[],s=(n("ac6a"),n("cadf"),n("06db"),n("456d"),n("8669")),o={name:"ExampleCard",props:{title:{type:String,required:!0},name:{type:String,required:!0},tagParts:{type:Object,default:function(){}}},data:function(){return{tab:"template",parts:{}}},mounted:function(){this.updateParts()},computed:{slugifiedTitle:function(){return Object(s["b"])(this.title)}},methods:{copyHeading:s["a"],updateParts:function(){var e=this;this.parts={},Object.keys(this.tagParts).forEach((function(t){""!==e.tagParts[t]&&(e.parts[t]="```\n"+e.tagParts[t]+"\n```")}))}}},r=o,l=n("2877"),d=Object(l["a"])(r,a,i,!1,null,null,null);t["a"]=d.exports},8669:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i}));n("a481");function a(e){var t=window.location.origin+window.location.pathname+"#"+e,n=document.createElement("textarea");n.className="fixed-top",n.value=t,document.body.appendChild(n),n.focus(),n.select(),document.execCommand("copy"),document.body.removeChild(n),this.$q.notify({message:"Anchor has been copied to clipboard.",color:"white",textColor:"primary",icon:"done",position:"top",timeout:2e3})}function i(e){return encodeURIComponent(String(e).trim().replace(/\s+/g,"-"))}},"87fc":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    now\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},b7ff:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div>\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden;">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n        :selected-start-end-dates="startEndDates"\n        :day-style="styleDay"\n        @mousedown:day="onMouseDownDay"\n        @mouseup:day="onMouseUpDay"\n        @mousemove:day="onMouseMoveDay"\n        style="height: 400px; overflow: hidden"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getDayIdentifier\n} from \'@quasar/quasar-ui-qcalendar/src/utils/timestamp\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      anchorTimestamp: \'\',\n      otherTimestamp: \'\',\n      mouseDown: false\n    }\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== \'\') {\n        return getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== \'\') {\n        return getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n\n    styleDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.isBetween(timestamp) === true) {\n          return {\n            color: \'blue\',\n            background: \'#CCCCFF\'\n          }\n        }\n      }\n    },\n\n    isBetween (timestamp) {\n      const nowIdentifier = getDayIdentifier(timestamp)\n      return this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier\n    },\n\n    onMouseDownDay (e) {\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},f2c8:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div style="overflow: auto">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      :day-height="100"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},f666:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},fe7d:function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h1",{staticClass:"q-markdown--heading-h1 q-markdown--title-heavy example-title",attrs:{id:e.slugifiedTitle},on:{click:function(t){return e.copyHeading(e.slugifiedTitle)}}},[e._v(e._s(e.title))])},i=[],s=n("8669"),o={name:"ExampleTitle",props:{title:{type:String,required:!0}},computed:{slugifiedTitle:function(){return Object(s["b"])(this.title)}},methods:{copyHeading:s["a"]}},r=o,l=n("2877"),d=Object(l["a"])(r,a,i,!1,null,null,null);t["a"]=d.exports}}]);