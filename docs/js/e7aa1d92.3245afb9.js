(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["e7aa1d92"],{"074e":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div class="row" style="overflow: hidden;">\n    <q-calendar\n      v-model="selectedDate1"\n      view="month"\n      locale="en-us"\n      :mini-mode="true"\n      short-weekday-label\n      animated\n      :selected-start-end-dates="startEndDates"\n      :day-class="classDay"\n      @mousedown:day="onMouseDownDay"\n      @mouseup:day="onMouseUpDay"\n      @mousemove:day="onMouseMoveDay"\n    />\n    <q-separator vertical />\n    <q-calendar\n      v-model="selectedDate2"\n      view="month"\n      locale="en-us"\n      :mini-mode="true"\n      short-weekday-label\n      animated\n      :selected-start-end-dates="startEndDates"\n      :day-class="classDay"\n      @mousedown:day="onMouseDownDay"\n      @mouseup:day="onMouseUpDay"\n      @mousemove:day="onMouseMoveDay"\n    />\n  </div>\n</template>\n\n<script>\nimport {\n  getDayIdentifier,\n  parseDate\n} from \'@quasar/quasar-ui-qcalendar/src/utils/timestamp\'\n\nconst CURRENT_MONTH = new Date()\n\nfunction getCurrentMonth (month) {\n  const newDay = new Date(CURRENT_MONTH)\n  newDay.setMonth(month)\n  const tm = parseDate(newDay)\n  return tm.date\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate1: \'\',\n      selectedDate2: \'\',\n      anchorTimestamp: \'\',\n      otherTimestamp: \'\',\n      mouseDown: false\n    }\n  },\n\n  beforeMount () {\n    this.selectedDate1 = getCurrentMonth(CURRENT_MONTH.getMonth())\n    this.selectedDate2 = getCurrentMonth(CURRENT_MONTH.getMonth() + 1)\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== \'\') {\n        return getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== \'\') {\n        return getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  methods: {\n    classDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        return this.getBetween(timestamp)\n      }\n    },\n\n    getBetween (timestamp) {\n      const nowIdentifier = getDayIdentifier(timestamp)\n      return {\n        \'q-selected-day-first\': this.lowIdentifier === nowIdentifier,\n        \'q-selected-day\': this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier,\n        \'q-selected-day-last\': this.highIdentifier === nowIdentifier\n      }\n    },\n\n    onMouseDownDay (e) {\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},"076d":function(e,t,n){"use strict";var a=n("5505"),i=n.n(a);i.a},"0868":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    short-weekday-label\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"0d54":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    show-work-weeks\n    view="month"\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"0f88e":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div style="overflow: hidden">\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n      v-touch-swipe.mouse.left.right="handleSwipe"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n    />\n  </div>\n</template>\n\n<script>\nimport { stopAndPrevent } from \'quasar/src/utils/event\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === \'right\') {\n            this.calendarPrev()\n          } else if (info.direction === \'left\') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      stopAndPrevent(evt)\n    }\n  }\n}\n<\/script>\n'},1053:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    show-day-of-year-label\n    view="month"\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},1108:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-splitter\n    v-model="splitterModel"\n    :limits="[30, 100]"\n    emit-immediately\n  >\n    <template v-slot:before>\n      <div style="overflow: auto">\n        <q-calendar\n          ref="calendar"\n          v-model="selectedDate"\n          view="month"\n          :disabled-days="disabledDays"\n          :mini-mode="miniMode"\n          :day-style="modifiedStyle"\n          locale="en-us"\n        />\n      </div>\n    </template>\n    <template v-slot:separator>\n      <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n    </template>\n    <template v-slot:after>\n      <div style="min-width: 20px"></div>\n    </template>\n  </q-splitter>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\',\n      splitterModel: 90, // start at 90%\n      miniMode: false,\n      disabledDays: [\n        \'2019-04-02\',\n        \'2019-04-03\',\n        \'2019-04-04\',\n        \'2019-04-05\'\n      ]\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: \'#ffcb9c!important\'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n'},"129e":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    short-month-label\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"185a":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-splitter\n    v-model="splitterModel"\n    :limits="[30, 100]"\n    emit-immediately\n  >\n    <template v-slot:before>\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        show-work-weeks\n        view="month"\n        :mini-mode="miniMode"\n        locale="en-us"\n      />\n    </template>\n    <template v-slot:separator>\n      <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n    </template>\n    <template v-slot:after>\n      <div style="min-width: 20px"></div>\n    </template>\n  </q-splitter>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: \'\',\n      miniMode: false\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},1882:function(e,t,n){"use strict";n.r(t),t["default"]="<template>\n  <q-calendar\n    v-model=\"selectedDate\"\n    view=\"month\"\n    locale=\"en-us\"\n    style=\"height: 500px;\"\n  >\n    <template #day=\"{ date }\">\n      <template v-for=\"(event, index) in getEvents(date)\">\n        <q-badge\n          :key=\"index\"\n          style=\"width: 100%; cursor: pointer; height: 16px; max-height: 16px\"\n          class=\"ellipsis\"\n          :class=\"badgeClasses(event, 'day')\"\n          :style=\"badgeStyles(event, 'day')\"\n        >\n          <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n        </q-badge>\n      </template>\n    </template>\n  </q-calendar>\n</template>\n\n<script>\nimport { date, colors } from 'quasar'\n\nimport {\n  parseDate\n} from '@quasar/quasar-ui-qcalendar/src/utils/timestamp'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = parseDate(newDay)\n  return tm.date\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(8),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(8),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(22),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(22),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(27),\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(29),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = colors.luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = new Date(this.events[i].date + ' ' + this.events[i].time)\n              const endTime = date.addToDate(startTime, { minutes: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = new Date(events[j].date + ' ' + events[j].time)\n                const endTime2 = date.addToDate(startTime2, { minutes: events[j].duration })\n                if (date.isBetweenDates(startTime, startTime2, endTime2) || date.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = new Date(this.events[i].date)\n          const endDate = date.addToDate(startDate, { days: this.events[i].days })\n          if (date.isBetweenDates(dt, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n"},"1ab9":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5, 6, 0]"\n    view="month"\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"1c0b":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div>\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},2794:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    :hide-header="true"\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"2e25":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div class="col-12">\n    <div class="col-12 full-width q-pa-md">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label="Change theme"\n        v-model="theme"\n        :options="themesList"\n        class="col-12"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n      enable-theme\n      :theme="theme"\n    />\n  </div>\n</template>\n\n<script>\nimport themes from \'../statics/themes.js\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      theme: {},\n      themes\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n'},4882:function(e,t,n){"use strict";n.r(t),t["default"]="<template>\n  <div style=\"overflow: auto\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"month\"\n      :disabled-days=\"disabledDays\"\n      :day-style=\"modifiedStyle\"\n      locale=\"en-us\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '2019-04-01',\n      disabledDays: [\n        '2019-04-02',\n        '2019-04-03',\n        '2019-04-04',\n        '2019-04-05'\n      ]\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: '#ffcb9c!important'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n"},"4d0b":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-splitter\n    v-model="splitterModel"\n    :limits="[30, 100]"\n    emit-immediately\n  >\n    <template v-slot:before>\n      <div style="overflow: hidden;">\n        <q-calendar\n          ref="calendar"\n          v-model="selectedDate"\n          view="month"\n          locale="en-us"\n          :mini-mode="miniMode"\n          animated\n          transition-prev="slide-right"\n          transition-next="slide-left"\n          :selected-start-end-dates="startEndDates"\n          :day-class="classDay"\n          @mousedown:day="onMouseDownDay"\n          @mouseup:day="onMouseUpDay"\n          @mousemove:day="onMouseMoveDay"\n        />\n    </div>\n    </template>\n    <template v-slot:separator>\n      <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n    </template>\n    <template v-slot:after>\n      <div style="min-width: 20px"></div>\n    </template>\n  </q-splitter>\n</template>\n\n<script>\nimport {\n  getDayIdentifier\n} from \'@quasar/quasar-ui-qcalendar/src/utils/timestamp\'\n\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: \'\',\n      miniMode: false,\n      anchorTimestamp: \'\',\n      otherTimestamp: \'\',\n      mouseDown: false\n    }\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== \'\') {\n        return getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== \'\') {\n        return getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n\n    classDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        return this.getBetween(timestamp)\n      }\n    },\n\n    getBetween (timestamp) {\n      debugger\n      const nowIdentifier = getDayIdentifier(timestamp)\n      return {\n        \'q-selected-day-first\': this.lowIdentifier === nowIdentifier,\n        \'q-selected-day\': this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier,\n        \'q-selected-day-last\': this.highIdentifier === nowIdentifier\n      }\n    },\n\n    onMouseDownDay (e) {\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},5505:function(e,t,n){},"5be5":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-splitter\n    v-model="splitterModel"\n    :limits="[30, 100]"\n    emit-immediately\n  >\n    <template v-slot:before>\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        :weekdays="[1, 2, 3, 4, 5]"\n        :mini-mode="miniMode"\n        view="month"\n        locale="en-us"\n      />\n    </template>\n    <template v-slot:separator>\n      <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n    </template>\n    <template v-slot:after>\n      <div style="min-width: 20px"></div>\n    </template>\n  </q-splitter>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: \'\',\n      miniMode: false\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},"658e":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"q-markdown"},[a("example-title",{attrs:{title:"Month View"}}),a("example-card",{attrs:{title:"Basic",name:"MonthViewBasic","tag-parts":e.getTagParts(n("f666").default)}}),a("example-card",{attrs:{title:"First Day Monday",name:"MonthViewMondayFirstDay","tag-parts":e.getTagParts(n("1ab9").default)}}),a("example-card",{attrs:{title:"5 Day Work Week",name:"MonthViewFiveDayWorkWeek","tag-parts":e.getTagParts(n("6684").default)}}),a("example-card",{attrs:{title:"Hide Header",name:"MonthViewHideHeader","tag-parts":e.getTagParts(n("2794").default)}}),a("example-card",{attrs:{title:"Disabled Days",name:"MonthViewDisabledDays","tag-parts":e.getTagParts(n("4882").default)}},[a("q-markdown",[e._v("\nWhen the property `disabled-days` has an array of disabled days, you can hook into the `day-style` property to change the background color of the disabled day.\n      ")])],1),a("example-title",{attrs:{title:"Now"}}),a("example-card",{attrs:{title:"Now",name:"MonthViewNow","tag-parts":e.getTagParts(n("87fc").default)}}),a("example-card",{attrs:{title:"Work Weeks",name:"MonthViewWorkWeekNumbers","tag-parts":e.getTagParts(n("0d54").default)}},[a("q-markdown",[e._v("\n`show-work-weeks` is available only for month view.\n      ")])],1),a("example-card",{attrs:{title:"Short Weekday Label",name:"MonthViewShortWeekdayLabel","tag-parts":e.getTagParts(n("0868").default)}}),a("example-card",{attrs:{title:"Short Month Label",name:"MonthViewShortMonthLabel","tag-parts":e.getTagParts(n("129e").default)}}),a("example-card",{attrs:{title:"Show Day of Year Label",name:"MonthViewShowDayOfYearLabel","tag-parts":e.getTagParts(n("1053").default)}},[a("q-markdown",[e._v("\n`show-day-of-year-label` is available only for month view.\n      ")])],1),a("example-card",{attrs:{title:"Day Height",name:"MonthViewDayHeight","tag-parts":e.getTagParts(n("f2c8").default)}},[a("q-markdown",[e._v("\n`day-height` is available only for month view.\nThe example below is setting the `day-height` to `100`, the default is `0`, which tells the calendar component to figure out it's own height.\n      ")])],1),a("example-card",{attrs:{title:"Prev/Next",name:"MonthViewPrevNext","tag-parts":e.getTagParts(n("1c0b").default)}}),a("example-card",{attrs:{title:"Swipe",name:"MonthViewSwipe","tag-parts":e.getTagParts(n("0f88e").default)}}),a("example-card",{attrs:{title:"Multi-Day Selection",name:"MonthViewSelection","tag-parts":e.getTagParts(n("b7ff").default)}},[a("q-markdown",[e._v("\nThe example below shows how to use the QCalendar to create a multi-day selector. The critical aspect of this is the `selected-start-end-dates` property. This takes an array of two dates (the first should be less or equal to the last). This property really doesn't do much, except to keep the calendar reactive, so that the `day-style` property can be used to style the selected days.\n\nFor the example below, click a day, and while holding the mouse down, move to a different day. Keep in mind, this is just one way of handling multi-day selection. if you needed swipe navigation on a mobile, you could modify the code to have independent click on start and end days.\n\nKeep in mind that the functionality below won't work with swipe actions.\n      ")])],1),a("example-card",{attrs:{title:"Slots",name:"MonthViewSlots","tag-parts":e.getTagParts(n("1882").default)}},[a("q-markdown",[e._v("\nFor slots that return `day` or `timestamp`, it looks like this:\n```js\n{\n  date: '',       // YYYY-mm-dd\n  time: '',       // 00:00:00 (optional)\n  year: 0,        // YYYY\n  month: 0,       // mm (Jan = 1, etc)\n  day: 0,         // day of the month\n  weekday: 0,     // week day\n  hour: 0,        // 24-hr\n  minute: 0,      // mm\n  doy: 0,         // day of year\n  workweek: 0,    // workweek number\n  hasDay: false,  // if this timestamp is supposed to have a date\n  hasTime: false, // if this timestamp is supposed to have a time\n  past: false,    // if timestamp is in the past (based on `now` property)\n  current: false, // if timestamp is current date (based on `now` property)\n  future: false   // if timestamp is in the future (based on `now` property)\n}\n```\n      ")])],1),a("example-card",{attrs:{title:"Theme",name:"MonthViewTheme","tag-parts":e.getTagParts(n("2e25").default)}}),a("example-title",{attrs:{title:"Mini-Mode"}}),a("q-markdown",[e._v('\nMini-Mode is a special behavior for QCalendar month view. The property is `mini-mode` and can be set to `true` or `auto`. When set to `true` mini-mode is always on. When set to `auto`, mini-mode will use the `breakpoint` property to determine when to go into mini-mode.\n\nWhen `mini-mode="auto"`, this works for the width of the screen, not the width of QCalendar. If you need to control mini-mode dynamically, then you need to set `true` or `false` based on your own calculations.\n\nThe examples below will be using QSplitter to adjust the width of the QCalendar and to dynamically switch to/from mini-mode. The breakpoint in the examples is **less than 500px**.\n\nNot all examples have been copied over to `mini-mode` examples. They still work, like **Prev/Next** and **Swipe**.\n\nAlso, when in `mini-mode` there are some things to be aware of:\n\n1. The property `month-label-size` defaults to `sm`\n2. The property `short-weekday-label` is always true\n3. The property `show-day-of-year-label` has no effect\n4. The month label on first available day of the month is not displayed\n\nAlso, regardless of `mini-mode` all slots associated with month view now have additional slotted data: `miniMode`, which is either set to `true` or `false`.\n    ')]),a("example-card",{attrs:{title:"Mini-Mode - Basic",name:"MonthViewBasicMiniMode","tag-parts":e.getTagParts(n("cae1").default)}}),a("example-card",{attrs:{title:"Mini-Mode - Disabled Days",name:"MonthViewDisabledDaysMiniMode","tag-parts":e.getTagParts(n("1108").default)}}),a("example-card",{attrs:{title:"Mini-Mode - 5 Day Work Week",name:"MonthViewFiveDayWorkWeekMiniMode","tag-parts":e.getTagParts(n("5be5").default)}}),a("example-card",{attrs:{title:"Mini-Mode - Work Week Numbers",name:"MonthViewWorkWeekNumbersMiniMode","tag-parts":e.getTagParts(n("185a").default)}}),a("example-card",{attrs:{title:"Mini-Mode - Selection",name:"MonthViewSelectionMiniMode","tag-parts":e.getTagParts(n("4d0b").default)}},[a("q-markdown",[e._v("\nThere are some considerations when using mini-mode selections. There are 3 special classes: `.q-selected-day-first`, `.q-selected-day` and `.q-selected-day-last` in conjunction with the `day-class` property. These will help you create a selector compliant with [Material Design](https://material.io/components/pickers/#anatomy). See examples below for usage.\n      ")])],1),a("example-card",{attrs:{title:"Mini-Mode - Multi-Month Selection",name:"MonthViewMultiMonthSelectionMiniMode","tag-parts":e.getTagParts(n("074e").default)}},[a("q-markdown",[e._v("\nUsing the property `short-weekday-label` while in `mini-mode` gives an even shorter weekday label than normal.\n      ")])],1),a("example-card",{attrs:{title:"Mini-Mode - Slots",name:"MonthViewSlotsMiniMode","tag-parts":e.getTagParts(n("c76b").default)}}),a("example-card",{attrs:{title:"Mini-Mode - Theme",name:"MonthViewThemeMiniMode","tag-parts":e.getTagParts(n("7007").default)}})],1)},i=[],s=n("fe7d"),r=n("74ba"),o=n("8669"),l=n("ad53"),d={name:"MonthView",components:{ExampleTitle:s["a"],ExampleCard:r["a"]},data:function(){return{tempToc:[]}},mounted:function(){this.toc=[],this.tempToc=[],this.addToToc("Month View"),this.addToToc("Basic",2),this.addToToc("First Day Monday",2),this.addToToc("5 Day Work Week",2),this.addToToc("Hide Header",2),this.addToToc("Disabled Days",2),this.addToToc("Now",2),this.addToToc("Work Weeks",2),this.addToToc("Short Weekday Label",2),this.addToToc("Short Month Label",2),this.addToToc("Show Day of Year Label",2),this.addToToc("Day Height",2),this.addToToc("Prev/Next",2),this.addToToc("Swipe",2),this.addToToc("Multi-Day Selection",2),this.addToToc("Slots",2),this.addToToc("Theme",2),this.addToToc("Mini-Mode"),this.addToToc("Mini-Mode - Basic",2),this.addToToc("Mini-Mode - Disabled Days",2),this.addToToc("Mini-Mode - 5 Day Work Week",2),this.addToToc("Mini-Mode - Work Week Numbers",2),this.addToToc("Mini-Mode - Selection",2),this.addToToc("Mini-Mode - Multi-Month Selection",2),this.addToToc("Mini-Mode - Slots",2),this.addToToc("Mini-Mode - Theme",2),this.toc=this.tempToc},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{getTagParts:l["c"],addToToc:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=Object(o["b"])(e);this.tempToc.push({children:[],id:n,label:e,level:t})}}},c=d,m=(n("076d"),n("2877")),h=Object(m["a"])(c,a,i,!1,null,null,null);t["default"]=h.exports},6684:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5]"\n    view="month"\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},7007:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div class="col-12">\n    <div class="col-12 full-width q-pa-md">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label="Change theme"\n        v-model="theme"\n        :options="themesList"\n        class="col-12"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-splitter\n      v-model="splitterModel"\n      :limits="[30, 100]"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <q-calendar\n          ref="calendar"\n          v-model="selectedDate"\n          view="month"\n          locale="en-us"\n          enable-theme\n          :theme="theme"\n          :mini-mode="miniMode"\n        />\n      </template>\n      <template v-slot:separator>\n        <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n      </template>\n      <template v-slot:after>\n        <div style="min-width: 20px"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\nimport themes from \'../statics/themes.js\'\n\nexport default {\n  data () {\n    return {\n      splitterModel: 90,\n      miniMode: false,\n      selectedDate: \'\',\n      theme: {},\n      themes\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},"74ba":function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"q-pa-md overflow-auto",attrs:{id:e.slugifiedTitle}},[n("q-card",{staticClass:"no-shadow",attrs:{flat:"",bordered:""}},[n("q-toolbar",[n("q-ribbon",{attrs:{position:"left",color:"rgba(0,0,0,.58)","background-color":"#c0c0c0","leaf-color":"#a0a0a0","leaf-position":"bottom",decoration:"rounded-out"}},[n("q-toolbar-title",{staticClass:"example-title",on:{click:function(t){return e.copyHeading(e.slugifiedTitle)}}},[n("span",{staticClass:"ellipsis"},[e._v(e._s(e.title))])])],1)],1),this.$slots.default?n("q-separator"):e._e(),this.$slots.default?n("q-card-section",[e._t("default")],2):e._e(),n("q-separator"),n("q-expansion-item",{attrs:{group:"someGroup",caption:"Code"}},[n("q-card",[n("q-tabs",{staticClass:"text-grey",attrs:{dense:"","active-color":"primary","indicator-color":"primary",align:"left","narrow-indicator":""},model:{value:e.tab,callback:function(t){e.tab=t},expression:"tab"}},[e.parts.template?n("q-tab",{attrs:{name:"template",label:"Template"}}):e._e(),e.parts.script?n("q-tab",{attrs:{name:"script",label:"Script"}}):e._e(),e.parts.style?n("q-tab",{attrs:{name:"style",label:"Style"}}):e._e()],1),n("q-separator"),n("q-tab-panels",{attrs:{animated:""},model:{value:e.tab,callback:function(t){e.tab=t},expression:"tab"}},[e.parts.template?n("q-tab-panel",{attrs:{name:"template"}},[n("q-markdown",{attrs:{src:e.parts.template}})],1):e._e(),e.parts.script?n("q-tab-panel",{attrs:{name:"script"}},[n("q-markdown",{attrs:{src:e.parts.script}})],1):e._e(),e.parts.style?n("q-tab-panel",{attrs:{name:"style"}},[n("q-markdown",{attrs:{src:e.parts.style}})],1):e._e()],1)],1)],1),n("q-separator"),n(e.name,{tag:"component",staticStyle:{overflow:"hidden"}})],1)],1)},i=[],s=(n("ac6a"),n("cadf"),n("06db"),n("456d"),n("8669")),r={name:"ExampleCard",props:{title:{type:String,required:!0},name:{type:String,required:!0},tagParts:{type:Object,default:function(){}}},data:function(){return{tab:"template",parts:{}}},mounted:function(){this.updateParts()},computed:{slugifiedTitle:function(){return Object(s["b"])(this.title)}},methods:{copyHeading:s["a"],updateParts:function(){var e=this;this.parts={},Object.keys(this.tagParts).forEach((function(t){""!==e.tagParts[t]&&(e.parts[t]="```\n"+e.tagParts[t]+"\n```")}))}}},o=r,l=n("2877"),d=Object(l["a"])(o,a,i,!1,null,null,null);t["a"]=d.exports},8669:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i}));n("a481");function a(e){var t=window.location.origin+window.location.pathname+"#"+e,n=document.createElement("textarea");n.className="fixed-top",n.value=t,document.body.appendChild(n),n.focus(),n.select(),document.execCommand("copy"),document.body.removeChild(n),this.$q.notify({message:"Anchor has been copied to clipboard.",color:"white",textColor:"primary",icon:"done",position:"top",timeout:2e3})}function i(e){return encodeURIComponent(String(e).trim().replace(/\s+/g,"-"))}},"87fc":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    now\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},b7ff:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div>\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden;">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n        :selected-start-end-dates="startEndDates"\n        :day-style="styleDay"\n        @mousedown:day="onMouseDownDay"\n        @mouseup:day="onMouseUpDay"\n        @mousemove:day="onMouseMoveDay"\n        style="height: 400px; overflow: hidden"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getDayIdentifier\n} from \'@quasar/quasar-ui-qcalendar/src/utils/timestamp\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      anchorTimestamp: \'\',\n      otherTimestamp: \'\',\n      mouseDown: false\n    }\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== \'\') {\n        return getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== \'\') {\n        return getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n\n    styleDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.isBetween(timestamp) === true) {\n          return {\n            color: \'blue\',\n            background: \'#CCCCFF\'\n          }\n        }\n      }\n    },\n\n    isBetween (timestamp) {\n      const nowIdentifier = getDayIdentifier(timestamp)\n      return this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier\n    },\n\n    onMouseDownDay (e) {\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},c76b:function(e,t,n){"use strict";n.r(t),t["default"]="<template>\n  <q-splitter\n    v-model=\"splitterModel\"\n    :limits=\"[30, 100]\"\n    emit-immediately\n  >\n    <template v-slot:before>\n      <q-calendar\n        ref=\"calendar\"\n        v-model=\"selectedDate\"\n        view=\"month\"\n        locale=\"en-us\"\n        :mini-mode=\"miniMode\"\n      >\n        <template #day=\"{ date, miniMode }\">\n          <template v-for=\"(event, index) in getEvents(date)\">\n            <template v-if=\"miniMode\">\n              <q-badge\n                :key=\"index\"\n                style=\"width: 10px; max-width: 10px; height: 5px; max-height: 5px\"\n                class=\"q-ma-xs\"\n                :class=\"badgeClasses(event, 'day')\"\n                :style=\"badgeStyles(event, 'day')\"\n              ></q-badge>\n            </template>\n            <template v-else>\n              <q-badge\n                :key=\"index\"\n                style=\"width: 100%; cursor: pointer; height: 16px; max-height: 16px\"\n                class=\"ellipsis q-mb-xs\"\n                :class=\"badgeClasses(event, 'day')\"\n                :style=\"badgeStyles(event, 'day')\"\n              >\n                <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n              </q-badge>\n            </template>\n          </template>\n        </template>\n      </q-calendar>\n    </template>\n    <template v-slot:separator>\n      <q-avatar color=\"primary\" text-color=\"white\" size=\"40px\" icon=\"drag_indicator\" />\n    </template>\n    <template v-slot:after>\n      <div style=\"min-width: 20px\"></div>\n    </template>\n  </q-splitter>\n</template>\n\n<script>\nimport { date, colors } from 'quasar'\n\nimport {\n  parseDate\n} from '@quasar/quasar-ui-qcalendar/src/utils/timestamp'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = parseDate(newDay)\n  return tm.date\n}\n\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: '',\n      miniMode: false,\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(8),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(8),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(22),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(22),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(27),\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(29),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  },\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = colors.luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = new Date(this.events[i].date + ' ' + this.events[i].time)\n              const endTime = date.addToDate(startTime, { minutes: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = new Date(events[j].date + ' ' + events[j].time)\n                const endTime2 = date.addToDate(startTime2, { minutes: events[j].duration })\n                if (date.isBetweenDates(startTime, startTime2, endTime2) || date.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = new Date(this.events[i].date)\n          const endDate = date.addToDate(startDate, { days: this.events[i].days })\n          if (date.isBetweenDates(dt, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n"},cae1:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-splitter\n    v-model="splitterModel"\n    :limits="[30, 100]"\n    emit-immediately\n  >\n    <template v-slot:before>\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        :mini-mode="miniMode"\n      />\n    </template>\n    <template v-slot:separator>\n      <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n    </template>\n    <template v-slot:after>\n      <div style="min-width: 20px"></div>\n    </template>\n  </q-splitter>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90,\n      selectedDate: \'\',\n      miniMode: false\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},f2c8:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div style="overflow: auto">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      :day-height="100"\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},f666:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="month"\n    locale="en-us"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},fe7d:function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h1",{staticClass:"q-markdown--heading-h1 q-markdown--title-heavy example-title",attrs:{id:e.slugifiedTitle},on:{click:function(t){return e.copyHeading(e.slugifiedTitle)}}},[e._v(e._s(e.title))])},i=[],s=n("8669"),r={name:"ExampleTitle",props:{title:{type:String,required:!0}},computed:{slugifiedTitle:function(){return Object(s["b"])(this.title)}},methods:{copyHeading:s["a"]}},o=r,l=n("2877"),d=Object(l["a"])(o,a,i,!1,null,null,null);t["a"]=d.exports}}]);