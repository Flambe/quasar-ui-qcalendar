(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["examples-source"],{"0366":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :column-header-after="true"\n      :column-count="3"\n      view="day"\n      locale="en-us"\n      style="height: 400px;"\n    >\n      <template #column-header-after="data">\n        <div class="q-ma-xs">\n          <q-item v-if="data.index === 0" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar1.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Mary</q-item-label>\n              <q-item-label caption>Content Writer</q-item-label>\n            </q-item-section>\n          </q-item>\n          <q-item v-if="data.index === 1" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar2.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Jessica</q-item-label>\n              <q-item-label caption>Designer</q-item-label>\n            </q-item-section>\n          </q-item>\n          <q-item v-if="data.index === 2" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar4.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Scott</q-item-label>\n              <q-item-label caption>Software Developer</q-item-label>\n            </q-item-section>\n          </q-item>\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"074e":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <div class="q-gutter-sm">\n      <q-checkbox v-model="mobile" label="Use Touch (set if on mobile)" />\n    </div>\n    <q-separator></q-separator>\n    <div class="row" style="overflow: hidden;">\n      <q-calendar\n        v-model="selectedDate1"\n        view="month"\n        locale="en-us"\n        :mini-mode="true"\n        short-weekday-label\n        animated\n        :selected-start-end-dates="startEndDates"\n        :day-class="classDay"\n        @mousedown:day="onMouseDownDay"\n        @mouseup:day="onMouseUpDay"\n        @mousemove:day="onMouseMoveDay"\n      />\n      <q-separator vertical />\n      <q-calendar\n        v-model="selectedDate2"\n        view="month"\n        locale="en-us"\n        :mini-mode="true"\n        short-weekday-label\n        animated\n        :selected-start-end-dates="startEndDates"\n        :day-class="classDay"\n        @mousedown:day="onMouseDownDay"\n        @mouseup:day="onMouseUpDay"\n        @mousemove:day="onMouseMoveDay"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n// normally you would not import "all" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from \'ui\' // ui is aliased from \'@quasar/quasar-ui-qcalendar\'\n\nconst CURRENT_MONTH = new Date()\n\nfunction getCurrentMonth (month) {\n  const newDay = new Date(CURRENT_MONTH)\n  newDay.setMonth(month)\n  const tm = QCalendar.parseDate(newDay)\n  return tm.date\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate1: \'\',\n      selectedDate2: \'\',\n      anchorTimestamp: \'\',\n      otherTimestamp: \'\',\n      mouseDown: false,\n      mobile: false\n    }\n  },\n\n  beforeMount () {\n    this.selectedDate1 = getCurrentMonth(CURRENT_MONTH.getMonth())\n    this.selectedDate2 = getCurrentMonth(CURRENT_MONTH.getMonth() + 1)\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== \'\') {\n        return QCalendar.getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== \'\') {\n        return QCalendar.getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  methods: {\n    classDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        return this.getBetween(timestamp)\n      }\n    },\n\n    getBetween (timestamp) {\n      const nowIdentifier = QCalendar.getDayIdentifier(timestamp)\n      return {\n        \'q-selected-day-first\': this.lowIdentifier === nowIdentifier,\n        \'q-selected-day\': this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier,\n        \'q-selected-day-last\': this.highIdentifier === nowIdentifier\n      }\n    },\n\n    onMouseDownDay (e) {\n      if (this.mobile === true &&\n        this.anchorTimestamp !== null &&\n        this.otherTimestamp !== null &&\n        this.anchorTimestamp.date === this.otherTimestamp.date) {\n        this.otherTimestamp = e\n        this.mouseDown = false\n        return\n      }\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},"078d":function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"scheduler\"\n      :resources=\"resources\"\n      :resource-width=\"160\"\n      locale=\"en-us\"\n      style=\"height: 500px;\"\n    >\n      \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n      <template #scheduler-resource=\"{ resource, index }\">\n        <div class=\"col-12\">\n          <q-btn flat class=\"fit\" :icon=\"getResourceImage(resource)\" :label=\"resource.label\"/>\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      resources: [\n        { label: 'John', avatar: 'https://cdn.quasar.dev/img/avatar4.jpg' },\n        { label: 'Mary', avatar: 'https://cdn.quasar.dev/img/avatar2.jpg' },\n        { label: 'Susan', avatar: 'https://cdn.quasar.dev/img/avatar1.jpg' },\n        { label: 'Olivia', avatar: 'https://cdn.quasar.dev/img/avatar6.jpg' },\n        { label: 'Board Room', icon: 'meeting_room' },\n        { label: 'Room-1', icon: 'meeting_room' },\n        { label: 'Room-2', icon: 'meeting_room' }\n      ]\n    }\n  },\n\n  methods: {\n    getResourceImage (resource) {\n      if (resource.icon) {\n        return resource.icon\n      }\n      if (resource.avatar) {\n        return 'img:' + resource.avatar\n      }\n      return ''\n    }\n  }\n}\n<\/script>\n\n<style lang=\"sass\">\nimg.q-icon.on-left\n  border-radius: 50%\n</style>\n"},"0868":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      short-weekday-label\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"0d54":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        show-work-weeks\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},"0f88e":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%; overflow: hidden;">\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n      v-touch-swipe.mouse.left.right="handleSwipe"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n      style="overflow: hidden;"\n    />\n  </div>\n</template>\n\n<script>\n// import { stopAndPrevent } from \'quasar/src/utils/event\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === \'right\') {\n            this.calendarPrev()\n          } else if (info.direction === \'left\') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      // stopAndPrevent(evt)\n      evt.cancelable !== false && evt.preventDefault()\n      evt.stopPropagation()\n    }\n  }\n}\n<\/script>\n'},1053:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        show-day-of-year-label\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},1108:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-splitter\n      v-model="splitterModel"\n      :limits="[30, 100]"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <div style="overflow: auto">\n          <q-calendar\n            ref="calendar"\n            v-model="selectedDate"\n            view="month"\n            :disabled-days="disabledDays"\n            :mini-mode="miniMode"\n            :day-style="modifiedStyle"\n            locale="en-us"\n          />\n        </div>\n      </template>\n      <template v-slot:separator>\n        <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n      </template>\n      <template v-slot:after>\n        <div style="min-width: 20px"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\',\n      splitterModel: 90, // start at 90%\n      miniMode: false,\n      disabledDays: [\n        \'2019-04-02\',\n        \'2019-04-03\',\n        \'2019-04-04\',\n        \'2019-04-05\'\n      ]\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: \'#ffcb9c!important\'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n'},"11bb":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"129e":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      short-month-label\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},1531:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="day"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n        style="height: 400px;"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},"185a":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-splitter\n      v-model="splitterModel"\n      :limits="[30, 100]"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <q-calendar\n          ref="calendar"\n          v-model="selectedDate"\n          show-work-weeks\n          view="month"\n          :mini-mode="miniMode"\n          locale="en-us"\n        />\n      </template>\n      <template v-slot:separator>\n        <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n      </template>\n      <template v-slot:after>\n        <div style="min-width: 20px"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: \'\',\n      miniMode: false\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},1882:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"month\"\n      locale=\"en-us\"\n      style=\"height: 500px;\"\n    >\n      <template #day=\"{ date }\">\n        <template v-for=\"(event, index) in getEvents(date)\">\n          <q-badge\n            :key=\"index\"\n            style=\"width: 100%; cursor: pointer; height: 16px; max-height: 16px\"\n            class=\"q-event\"\n            :class=\"badgeClasses(event, 'day')\"\n            :style=\"badgeStyles(event, 'day')\"\n          >\n            <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n          </q-badge>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\n// normally you would not import \"all\" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from 'ui' // ui is aliased from '@quasar/quasar-ui-qcalendar'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = QCalendar.parseDate(newDay)\n  return tm.date\n}\n\nconst reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/\n\nfunction textToRgb (color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  const m = reRGBA.exec(color)\n  if (m) {\n    const rgb = {\n      r: Math.min(255, parseInt(m[2], 10)),\n      g: Math.min(255, parseInt(m[3], 10)),\n      b: Math.min(255, parseInt(m[4], 10))\n    }\n    if (m[1]) {\n      rgb.a = Math.min(1, parseFloat(m[5]))\n    }\n    return rgb\n  }\n  return hexToRgb(color)\n}\n\nfunction hexToRgb (hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  hex = hex.replace(/^#/, '')\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  } else if (hex.length === 4) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n  }\n\n  const num = parseInt(hex, 16)\n\n  return hex.length > 6\n    ? { r: num >> 24 & 255, g: num >> 16 & 255, b: num >> 8 & 255, a: Math.round((num & 255) / 2.55) }\n    : { r: num >> 16, g: num >> 8 & 255, b: num & 255 }\n}\n\nfunction luminosity (color) {\n  if (typeof color !== 'string' && (!color || color.r === void 0)) {\n    throw new TypeError('Expected a string or a {r, g, b} object as color')\n  }\n\n  const\n    rgb = typeof color === 'string' ? textToRgb(color) : color,\n    r = rgb.r / 255,\n    g = rgb.g / 255,\n    b = rgb.b / 255,\n    R = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4),\n    G = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4),\n    B = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4)\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(8),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(8),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(15),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(15),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Rowing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(16),\n          bgcolor: 'purple',\n          icon: 'rowing',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(22),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 7\n        }\n      ]\n    }\n  },\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const currentDate = QCalendar.parseTimestamp(dt)\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = QCalendar.parseTimestamp(this.events[i].date + ' ' + this.events[i].time)\n              const endTime = QCalendar.addToDate(startTime, { minute: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = QCalendar.parseTimestamp(events[j].date + ' ' + events[j].time)\n                const endTime2 = QCalendar.addToDate(startTime2, { minute: events[j].duration })\n                if (QCalendar.isBetweenDates(startTime, startTime2, endTime2) || QCalendar.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = QCalendar.parseTimestamp(this.events[i].date)\n          const endDate = QCalendar.addToDate(startDate, { day: this.events[i].days })\n          if (QCalendar.isBetweenDates(currentDate, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n"},"1ab9":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :weekdays="[1, 2, 3, 4, 5, 6, 0]"\n      view="month"\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"1c0b":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},2794:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      :hide-header="true"\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"2a77":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :column-header-before="true"\n      :column-header-after="true"\n      view="week"\n      locale="en-us"\n      style="height: 400px;"\n    >\n      \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n      <template #column-header-before="days">\n        <div class="q-ma-xs">\n          Before\n        </div>\n      </template>\n      <template #column-header-after="days">\n        <div class="q-ma-xs">\n          After\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"2bca":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      :interval-minutes="30"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"2e25":function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%; overflow: hidden;\">\n    <div class=\"q-pa-md\">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        class=\"col-12\"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"month\"\n      locale=\"en-us\"\n      enable-theme\n      :theme=\"theme\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      theme: {},\n      themes: [\n        {\n          name: 'default'\n        },\n        {\n          name: 'dark',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-grey-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-grey-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-grey-10',\n          colorBodyCurrent: 'blue-grey-2',\n          backgroundBodyCurrent: 'blue-grey-10',\n          colorBodyFuture: 'blue-grey-2',\n          backgroundBodyFuture: 'blue-grey-10',\n          // header - weekly only\n          colorHeader: 'blue-grey-2',\n          backgroundHeader: 'blue-grey-10',\n          colorHeaderOutside: 'blue-grey-2',\n          backgroundHeaderOutside: 'blue-grey-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-grey-10',\n          colorHeaderCurrent: 'blue-grey-2',\n          backgroundHeaderCurrent: 'blue-grey-10',\n          colorHeaderFuture: 'blue-grey-2',\n          backgroundHeaderFuture: 'blue-grey-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-grey-8',\n          backgroundWorkWeekPast: 'blue-grey-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-grey-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-grey-10',\n          // label\n          colorDayLabelOutside: 'blue-grey-2',\n          backgroundDayLabelOutside: 'blue-grey-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-grey-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-grey-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-grey-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-grey-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-grey-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-grey-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-grey-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-grey-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-grey-10'\n        },\n        {\n          name: 'teal',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'teal-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'teal-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'teal-10',\n          colorBodyCurrent: 'teal-2',\n          backgroundBodyCurrent: 'teal-10',\n          colorBodyFuture: 'teal-2',\n          backgroundBodyFuture: 'teal-10',\n          // header - weekly only\n          colorHeader: 'teal-2',\n          backgroundHeader: 'teal-10',\n          colorHeaderOutside: 'teal-2',\n          backgroundHeaderOutside: 'teal-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'teal-10',\n          colorHeaderCurrent: 'teal-2',\n          backgroundHeaderCurrent: 'teal-10',\n          colorHeaderFuture: 'teal-2',\n          backgroundHeaderFuture: 'teal-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'teal-8',\n          backgroundWorkWeekPast: 'teal-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'teal-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'teal-10',\n          // label\n          colorDayLabelOutside: 'teal-2',\n          backgroundDayLabelOutside: 'teal-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'teal-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'teal-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'teal-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'teal-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'teal-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'teal-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'teal-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'teal-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'teal-10'\n        },\n        {\n          name: 'brown',\n          // body\n          colorBody: 'brown-2',\n          backgroundBody: 'brown-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'brown-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'brown-10',\n          colorBodyCurrent: 'brown-2',\n          backgroundBodyCurrent: 'brown-10',\n          colorBodyFuture: 'brown-2',\n          backgroundBodyFuture: 'brown-10',\n          // header - weekly only\n          colorHeader: 'brown-2',\n          backgroundHeader: 'brown-10',\n          colorHeaderOutside: 'brown-2',\n          backgroundHeaderOutside: 'brown-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'brown-10',\n          colorHeaderCurrent: 'brown-2',\n          backgroundHeaderCurrent: 'brown-10',\n          colorHeaderFuture: 'brown-2',\n          backgroundHeaderFuture: 'brown-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'brown-8',\n          backgroundWorkWeekPast: 'brown-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'brown-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'brown-10',\n          // label\n          colorDayLabelOutside: 'brown-2',\n          backgroundDayLabelOutside: 'brown-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'brown-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'brown-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'brown-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'brown-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'brown-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'brown-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'brown-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'brown-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'brown-10'\n        },\n        {\n          name: 'deep purple',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'deep-purple-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'deep-purple-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'deep-purple-10',\n          colorBodyCurrent: 'deep-purple-2',\n          backgroundBodyCurrent: 'deep-purple-10',\n          colorBodyFuture: 'deep-purple-2',\n          backgroundBodyFuture: 'deep-purple-10',\n          // header - weekly only\n          colorHeader: 'deep-purple-2',\n          backgroundHeader: 'deep-purple-10',\n          colorHeaderOutside: 'deep-purple-2',\n          backgroundHeaderOutside: 'deep-purple-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'deep-purple-10',\n          colorHeaderCurrent: 'deep-purple-2',\n          backgroundHeaderCurrent: 'deep-purple-10',\n          colorHeaderFuture: 'deep-purple-2',\n          backgroundHeaderFuture: 'deep-purple-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'deep-purple-8',\n          backgroundWorkWeekPast: 'deep-purple-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'deep-purple-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'deep-purple-10',\n          // label\n          colorDayLabelOutside: 'deep-purple-2',\n          backgroundDayLabelOutside: 'deep-purple-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'deep-purple-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'deep-purple-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'deep-purple-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'deep-purple-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'deep-purple-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'deep-purple-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'deep-purple-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'deep-purple-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'deep-purple-10'\n        },\n        {\n          name: 'indigo',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'indigo-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'indigo-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'indigo-10',\n          colorBodyCurrent: 'indigo-2',\n          backgroundBodyCurrent: 'indigo-10',\n          colorBodyFuture: 'indigo-2',\n          backgroundBodyFuture: 'indigo-10',\n          // header - weekly only\n          colorHeader: 'indigo-2',\n          backgroundHeader: 'indigo-10',\n          colorHeaderOutside: 'indigo-2',\n          backgroundHeaderOutside: 'indigo-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'indigo-10',\n          colorHeaderCurrent: 'indigo-2',\n          backgroundHeaderCurrent: 'indigo-10',\n          colorHeaderFuture: 'indigo-2',\n          backgroundHeaderFuture: 'indigo-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'indigo-8',\n          backgroundWorkWeekPast: 'indigo-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'indigo-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'indigo-10',\n          // label\n          colorDayLabelOutside: 'indigo-2',\n          backgroundDayLabelOutside: 'indigo-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'indigo-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'indigo-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'indigo-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'indigo-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'indigo-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'indigo-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'indigo-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'indigo-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'indigo-10'\n        },\n        {\n          name: 'blue',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-10',\n          colorBodyCurrent: 'blue-2',\n          backgroundBodyCurrent: 'blue-10',\n          colorBodyFuture: 'blue-2',\n          backgroundBodyFuture: 'blue-10',\n          // header - weekly only\n          colorHeader: 'blue-2',\n          backgroundHeader: 'blue-10',\n          colorHeaderOutside: 'blue-2',\n          backgroundHeaderOutside: 'blue-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-10',\n          colorHeaderCurrent: 'blue-2',\n          backgroundHeaderCurrent: 'blue-10',\n          colorHeaderFuture: 'blue-2',\n          backgroundHeaderFuture: 'blue-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-8',\n          backgroundWorkWeekPast: 'blue-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-10',\n          // label\n          colorDayLabelOutside: 'blue-2',\n          backgroundDayLabelOutside: 'blue-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-10'\n        }\n      ]\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n"},3173:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"week-agenda\"\n      :weekdays=\"[1,2,3,4,5]\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    >\n      <template #day-body=\"day\">\n        <template v-for=\"(agenda) in getAgenda(day)\">\n          <div\n            :key=\"day.date + agenda.time\"\n            :label=\"agenda.time\"\n            class=\"justify-start q-ma-sm shadow-5 bg-grey-6\"\n          >\n            <div v-if=\"agenda.avatar\" class=\"row justify-center\" style=\"margin-top: 30px; width: 100%;\">\n              <q-avatar style=\"margin-top: -25px; margin-bottom: 10px; font-size: 60px; max-height: 50px;\">\n                <img :src=\"agenda.avatar\" style=\"border: #9e9e9e solid 5px;\">\n              </q-avatar>\n            </div>\n            <div class=\"col-12 q-px-sm\">\n              <strong>{{ agenda.time }}</strong>\n            </div>\n            <div v-if=\"agenda.desc\" class=\"col-12 q-px-sm\" style=\"font-size: 10px;\">\n              {{ agenda.desc }}\n            </div>\n          </div>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      agenda: {\n        // value represents day of the week\n        1: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png',\n            desc: 'Meeting with CEO'\n          },\n          {\n            time: '08:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png',\n            desc: 'Meeting with HR'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg',\n            desc: 'Meeting with Karen'\n          }\n        ],\n        2: [\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg',\n            desc: 'Meeting with Alisha'\n          },\n          {\n            time: '17:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg',\n            desc: 'Meeting with Sarah'\n          }\n        ],\n        3: [\n          {\n            time: '08:00',\n            desc: 'Stand-up SCRUM',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '10:00',\n            desc: 'Sprint planning',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg'\n          }\n        ],\n        4: [\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          }\n        ],\n        5: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '09:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar4.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar5.jpg'\n          },\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          },\n          {\n            time: '13:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '14:00',\n            avatar: 'https://cdn.quasar.dev/img/linux-avatar.png'\n          },\n          {\n            time: '14:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png'\n          },\n          {\n            time: '15:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '15:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '16:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          }\n        ]\n      }\n    }\n  },\n\n  methods: {\n    getAgenda (day) {\n      return this.agenda[parseInt(day.weekday, 10)]\n    }\n  }\n}\n<\/script>\n"},4882:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%; overflow: auto; \">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"month\"\n      :disabled-days=\"disabledDays\"\n      :day-style=\"modifiedStyle\"\n      locale=\"en-us\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '2019-04-01',\n      disabledDays: [\n        '2019-04-02',\n        '2019-04-03',\n        '2019-04-04',\n        '2019-04-05'\n      ]\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: '#ffcb9c!important'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n"},"4d0b":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <div class="q-gutter-sm">\n      <q-checkbox v-model="mobile" label="Use Touch (set if on mobile)" />\n    </div>\n    <q-separator></q-separator>\n    <q-splitter\n      v-model="splitterModel"\n      :limits="[30, 100]"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <div style="overflow: hidden;">\n          <q-calendar\n            ref="calendar"\n            v-model="selectedDate"\n            view="month"\n            locale="en-us"\n            :mini-mode="miniMode"\n            :selected-start-end-dates="startEndDates"\n            :day-class="classDay"\n            @mousedown:day="onMouseDownDay"\n            @mouseup:day="onMouseUpDay"\n            @mousemove:day="onMouseMoveDay"\n          />\n      </div>\n      </template>\n      <template v-slot:separator>\n        <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n      </template>\n      <template v-slot:after>\n        <div style="min-width: 20px"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\n// normally you would not import "all" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from \'ui\' // ui is aliased from \'@quasar/quasar-ui-qcalendar\'\n\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: \'\',\n      miniMode: false,\n      anchorTimestamp: \'\',\n      otherTimestamp: \'\',\n      mouseDown: false,\n      mobile: false\n    }\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== \'\') {\n        return QCalendar.getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== \'\') {\n        return QCalendar.getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n\n    classDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        return this.getBetween(timestamp)\n      }\n    },\n\n    getBetween (timestamp) {\n      const nowIdentifier = QCalendar.getDayIdentifier(timestamp)\n      return {\n        \'q-selected-day-first\': this.lowIdentifier === nowIdentifier,\n        \'q-selected-day\': this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier,\n        \'q-selected-day-last\': this.highIdentifier === nowIdentifier\n      }\n    },\n\n    onMouseDownDay (e) {\n      if (this.mobile === true &&\n        this.anchorTimestamp !== null &&\n        this.otherTimestamp !== null &&\n        this.anchorTimestamp.date === this.otherTimestamp.date) {\n        this.otherTimestamp = e\n        this.mouseDown = false\n        return\n      }\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},5362:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <div class=\"full-width q-pa-md\">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        class=\"col-12\"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"scheduler\"\n      :resources=\"resources\"\n      :resource-height=\"50\"\n      enable-theme\n      :theme=\"theme\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      theme: {},\n      themes: [\n        {\n          name: 'default'\n        },\n        {\n          name: 'dark',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-grey-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-grey-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-grey-10',\n          colorBodyCurrent: 'blue-grey-2',\n          backgroundBodyCurrent: 'blue-grey-10',\n          colorBodyFuture: 'blue-grey-2',\n          backgroundBodyFuture: 'blue-grey-10',\n          // header - weekly only\n          colorHeader: 'blue-grey-2',\n          backgroundHeader: 'blue-grey-10',\n          colorHeaderOutside: 'blue-grey-2',\n          backgroundHeaderOutside: 'blue-grey-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-grey-10',\n          colorHeaderCurrent: 'blue-grey-2',\n          backgroundHeaderCurrent: 'blue-grey-10',\n          colorHeaderFuture: 'blue-grey-2',\n          backgroundHeaderFuture: 'blue-grey-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-grey-8',\n          backgroundWorkWeekPast: 'blue-grey-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-grey-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-grey-10',\n          // label\n          colorDayLabelOutside: 'blue-grey-2',\n          backgroundDayLabelOutside: 'blue-grey-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-grey-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-grey-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-grey-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-grey-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-grey-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-grey-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-grey-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-grey-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-grey-10'\n        },\n        {\n          name: 'teal',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'teal-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'teal-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'teal-10',\n          colorBodyCurrent: 'teal-2',\n          backgroundBodyCurrent: 'teal-10',\n          colorBodyFuture: 'teal-2',\n          backgroundBodyFuture: 'teal-10',\n          // header - weekly only\n          colorHeader: 'teal-2',\n          backgroundHeader: 'teal-10',\n          colorHeaderOutside: 'teal-2',\n          backgroundHeaderOutside: 'teal-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'teal-10',\n          colorHeaderCurrent: 'teal-2',\n          backgroundHeaderCurrent: 'teal-10',\n          colorHeaderFuture: 'teal-2',\n          backgroundHeaderFuture: 'teal-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'teal-8',\n          backgroundWorkWeekPast: 'teal-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'teal-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'teal-10',\n          // label\n          colorDayLabelOutside: 'teal-2',\n          backgroundDayLabelOutside: 'teal-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'teal-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'teal-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'teal-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'teal-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'teal-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'teal-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'teal-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'teal-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'teal-10'\n        },\n        {\n          name: 'brown',\n          // body\n          colorBody: 'brown-2',\n          backgroundBody: 'brown-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'brown-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'brown-10',\n          colorBodyCurrent: 'brown-2',\n          backgroundBodyCurrent: 'brown-10',\n          colorBodyFuture: 'brown-2',\n          backgroundBodyFuture: 'brown-10',\n          // header - weekly only\n          colorHeader: 'brown-2',\n          backgroundHeader: 'brown-10',\n          colorHeaderOutside: 'brown-2',\n          backgroundHeaderOutside: 'brown-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'brown-10',\n          colorHeaderCurrent: 'brown-2',\n          backgroundHeaderCurrent: 'brown-10',\n          colorHeaderFuture: 'brown-2',\n          backgroundHeaderFuture: 'brown-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'brown-8',\n          backgroundWorkWeekPast: 'brown-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'brown-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'brown-10',\n          // label\n          colorDayLabelOutside: 'brown-2',\n          backgroundDayLabelOutside: 'brown-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'brown-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'brown-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'brown-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'brown-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'brown-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'brown-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'brown-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'brown-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'brown-10'\n        },\n        {\n          name: 'deep purple',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'deep-purple-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'deep-purple-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'deep-purple-10',\n          colorBodyCurrent: 'deep-purple-2',\n          backgroundBodyCurrent: 'deep-purple-10',\n          colorBodyFuture: 'deep-purple-2',\n          backgroundBodyFuture: 'deep-purple-10',\n          // header - weekly only\n          colorHeader: 'deep-purple-2',\n          backgroundHeader: 'deep-purple-10',\n          colorHeaderOutside: 'deep-purple-2',\n          backgroundHeaderOutside: 'deep-purple-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'deep-purple-10',\n          colorHeaderCurrent: 'deep-purple-2',\n          backgroundHeaderCurrent: 'deep-purple-10',\n          colorHeaderFuture: 'deep-purple-2',\n          backgroundHeaderFuture: 'deep-purple-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'deep-purple-8',\n          backgroundWorkWeekPast: 'deep-purple-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'deep-purple-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'deep-purple-10',\n          // label\n          colorDayLabelOutside: 'deep-purple-2',\n          backgroundDayLabelOutside: 'deep-purple-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'deep-purple-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'deep-purple-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'deep-purple-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'deep-purple-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'deep-purple-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'deep-purple-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'deep-purple-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'deep-purple-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'deep-purple-10'\n        },\n        {\n          name: 'indigo',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'indigo-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'indigo-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'indigo-10',\n          colorBodyCurrent: 'indigo-2',\n          backgroundBodyCurrent: 'indigo-10',\n          colorBodyFuture: 'indigo-2',\n          backgroundBodyFuture: 'indigo-10',\n          // header - weekly only\n          colorHeader: 'indigo-2',\n          backgroundHeader: 'indigo-10',\n          colorHeaderOutside: 'indigo-2',\n          backgroundHeaderOutside: 'indigo-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'indigo-10',\n          colorHeaderCurrent: 'indigo-2',\n          backgroundHeaderCurrent: 'indigo-10',\n          colorHeaderFuture: 'indigo-2',\n          backgroundHeaderFuture: 'indigo-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'indigo-8',\n          backgroundWorkWeekPast: 'indigo-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'indigo-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'indigo-10',\n          // label\n          colorDayLabelOutside: 'indigo-2',\n          backgroundDayLabelOutside: 'indigo-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'indigo-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'indigo-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'indigo-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'indigo-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'indigo-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'indigo-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'indigo-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'indigo-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'indigo-10'\n        },\n        {\n          name: 'blue',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-10',\n          colorBodyCurrent: 'blue-2',\n          backgroundBodyCurrent: 'blue-10',\n          colorBodyFuture: 'blue-2',\n          backgroundBodyFuture: 'blue-10',\n          // header - weekly only\n          colorHeader: 'blue-2',\n          backgroundHeader: 'blue-10',\n          colorHeaderOutside: 'blue-2',\n          backgroundHeaderOutside: 'blue-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-10',\n          colorHeaderCurrent: 'blue-2',\n          backgroundHeaderCurrent: 'blue-10',\n          colorHeaderFuture: 'blue-2',\n          backgroundHeaderFuture: 'blue-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-8',\n          backgroundWorkWeekPast: 'blue-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-10',\n          // label\n          colorDayLabelOutside: 'blue-2',\n          backgroundDayLabelOutside: 'blue-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-10'\n        }\n      ],\n      resources: [\n        { label: 'John' },\n        { label: 'Mary' },\n        { label: 'Susan' },\n        { label: 'Olivia' },\n        { label: 'Board Room' },\n        { label: 'Room-1' },\n        { label: 'Room-2' }\n      ]\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n"},"5be5":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-splitter\n      v-model="splitterModel"\n      :limits="[30, 100]"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <q-calendar\n          ref="calendar"\n          v-model="selectedDate"\n          :weekdays="[1, 2, 3, 4, 5]"\n          :mini-mode="miniMode"\n          view="month"\n          locale="en-us"\n        />\n      </template>\n      <template v-slot:separator>\n        <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n      </template>\n      <template v-slot:after>\n        <div style="min-width: 20px"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: \'\',\n      miniMode: false\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},6601:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%; overflow: hidden;\">\n    <q-calendar\n      ref=\"calendar\"\n      v-model=\"selectedDate\"\n      view=\"scheduler\"\n      locale=\"en-us\"\n      :resources=\"resources\"\n      v-touch-swipe.mouse.left.right=\"handleSwipe\"\n      animated\n      transition-prev=\"slide-right\"\n      transition-next=\"slide-left\"\n    />\n  </div>\n</template>\n\n<script>\n// import { stopAndPrevent } from 'quasar/src/utils/event'\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      resources: [\n        { label: 'John' },\n        { label: 'Mary' },\n        { label: 'Susan' },\n        { label: 'Olivia' },\n        { label: 'Board Room' },\n        { label: 'Room-1' },\n        { label: 'Room-2' }\n      ],\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === 'right') {\n            this.calendarPrev()\n          } else if (info.direction === 'left') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      // stopAndPrevent(evt)\n      evt.cancelable !== false && evt.preventDefault()\n      evt.stopPropagation()\n    }\n  }\n}\n<\/script>\n"},6684:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :weekdays="[1, 2, 3, 4, 5]"\n      view="month"\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"6a80":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="week"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n        style="height: 400px; overflow: hidden"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},7007:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <div class=\"full-width q-pa-md\">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        class=\"col-12\"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-splitter\n      v-model=\"splitterModel\"\n      :limits=\"[30, 100]\"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <q-calendar\n          ref=\"calendar\"\n          v-model=\"selectedDate\"\n          view=\"month\"\n          locale=\"en-us\"\n          enable-theme\n          :theme=\"theme\"\n          :mini-mode=\"miniMode\"\n        />\n      </template>\n      <template v-slot:separator>\n        <q-avatar color=\"primary\" text-color=\"white\" size=\"40px\" icon=\"drag_indicator\" />\n      </template>\n      <template v-slot:after>\n        <div style=\"min-width: 20px\"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90,\n      miniMode: false,\n      selectedDate: '',\n      theme: {},\n      themes: [\n        {\n          name: 'default'\n        },\n        {\n          name: 'dark',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-grey-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-grey-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-grey-10',\n          colorBodyCurrent: 'blue-grey-2',\n          backgroundBodyCurrent: 'blue-grey-10',\n          colorBodyFuture: 'blue-grey-2',\n          backgroundBodyFuture: 'blue-grey-10',\n          // header - weekly only\n          colorHeader: 'blue-grey-2',\n          backgroundHeader: 'blue-grey-10',\n          colorHeaderOutside: 'blue-grey-2',\n          backgroundHeaderOutside: 'blue-grey-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-grey-10',\n          colorHeaderCurrent: 'blue-grey-2',\n          backgroundHeaderCurrent: 'blue-grey-10',\n          colorHeaderFuture: 'blue-grey-2',\n          backgroundHeaderFuture: 'blue-grey-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-grey-8',\n          backgroundWorkWeekPast: 'blue-grey-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-grey-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-grey-10',\n          // label\n          colorDayLabelOutside: 'blue-grey-2',\n          backgroundDayLabelOutside: 'blue-grey-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-grey-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-grey-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-grey-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-grey-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-grey-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-grey-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-grey-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-grey-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-grey-10'\n        },\n        {\n          name: 'teal',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'teal-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'teal-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'teal-10',\n          colorBodyCurrent: 'teal-2',\n          backgroundBodyCurrent: 'teal-10',\n          colorBodyFuture: 'teal-2',\n          backgroundBodyFuture: 'teal-10',\n          // header - weekly only\n          colorHeader: 'teal-2',\n          backgroundHeader: 'teal-10',\n          colorHeaderOutside: 'teal-2',\n          backgroundHeaderOutside: 'teal-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'teal-10',\n          colorHeaderCurrent: 'teal-2',\n          backgroundHeaderCurrent: 'teal-10',\n          colorHeaderFuture: 'teal-2',\n          backgroundHeaderFuture: 'teal-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'teal-8',\n          backgroundWorkWeekPast: 'teal-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'teal-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'teal-10',\n          // label\n          colorDayLabelOutside: 'teal-2',\n          backgroundDayLabelOutside: 'teal-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'teal-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'teal-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'teal-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'teal-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'teal-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'teal-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'teal-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'teal-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'teal-10'\n        },\n        {\n          name: 'brown',\n          // body\n          colorBody: 'brown-2',\n          backgroundBody: 'brown-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'brown-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'brown-10',\n          colorBodyCurrent: 'brown-2',\n          backgroundBodyCurrent: 'brown-10',\n          colorBodyFuture: 'brown-2',\n          backgroundBodyFuture: 'brown-10',\n          // header - weekly only\n          colorHeader: 'brown-2',\n          backgroundHeader: 'brown-10',\n          colorHeaderOutside: 'brown-2',\n          backgroundHeaderOutside: 'brown-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'brown-10',\n          colorHeaderCurrent: 'brown-2',\n          backgroundHeaderCurrent: 'brown-10',\n          colorHeaderFuture: 'brown-2',\n          backgroundHeaderFuture: 'brown-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'brown-8',\n          backgroundWorkWeekPast: 'brown-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'brown-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'brown-10',\n          // label\n          colorDayLabelOutside: 'brown-2',\n          backgroundDayLabelOutside: 'brown-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'brown-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'brown-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'brown-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'brown-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'brown-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'brown-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'brown-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'brown-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'brown-10'\n        },\n        {\n          name: 'deep purple',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'deep-purple-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'deep-purple-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'deep-purple-10',\n          colorBodyCurrent: 'deep-purple-2',\n          backgroundBodyCurrent: 'deep-purple-10',\n          colorBodyFuture: 'deep-purple-2',\n          backgroundBodyFuture: 'deep-purple-10',\n          // header - weekly only\n          colorHeader: 'deep-purple-2',\n          backgroundHeader: 'deep-purple-10',\n          colorHeaderOutside: 'deep-purple-2',\n          backgroundHeaderOutside: 'deep-purple-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'deep-purple-10',\n          colorHeaderCurrent: 'deep-purple-2',\n          backgroundHeaderCurrent: 'deep-purple-10',\n          colorHeaderFuture: 'deep-purple-2',\n          backgroundHeaderFuture: 'deep-purple-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'deep-purple-8',\n          backgroundWorkWeekPast: 'deep-purple-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'deep-purple-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'deep-purple-10',\n          // label\n          colorDayLabelOutside: 'deep-purple-2',\n          backgroundDayLabelOutside: 'deep-purple-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'deep-purple-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'deep-purple-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'deep-purple-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'deep-purple-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'deep-purple-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'deep-purple-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'deep-purple-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'deep-purple-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'deep-purple-10'\n        },\n        {\n          name: 'indigo',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'indigo-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'indigo-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'indigo-10',\n          colorBodyCurrent: 'indigo-2',\n          backgroundBodyCurrent: 'indigo-10',\n          colorBodyFuture: 'indigo-2',\n          backgroundBodyFuture: 'indigo-10',\n          // header - weekly only\n          colorHeader: 'indigo-2',\n          backgroundHeader: 'indigo-10',\n          colorHeaderOutside: 'indigo-2',\n          backgroundHeaderOutside: 'indigo-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'indigo-10',\n          colorHeaderCurrent: 'indigo-2',\n          backgroundHeaderCurrent: 'indigo-10',\n          colorHeaderFuture: 'indigo-2',\n          backgroundHeaderFuture: 'indigo-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'indigo-8',\n          backgroundWorkWeekPast: 'indigo-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'indigo-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'indigo-10',\n          // label\n          colorDayLabelOutside: 'indigo-2',\n          backgroundDayLabelOutside: 'indigo-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'indigo-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'indigo-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'indigo-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'indigo-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'indigo-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'indigo-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'indigo-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'indigo-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'indigo-10'\n        },\n        {\n          name: 'blue',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-10',\n          colorBodyCurrent: 'blue-2',\n          backgroundBodyCurrent: 'blue-10',\n          colorBodyFuture: 'blue-2',\n          backgroundBodyFuture: 'blue-10',\n          // header - weekly only\n          colorHeader: 'blue-2',\n          backgroundHeader: 'blue-10',\n          colorHeaderOutside: 'blue-2',\n          backgroundHeaderOutside: 'blue-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-10',\n          colorHeaderCurrent: 'blue-2',\n          backgroundHeaderCurrent: 'blue-10',\n          colorHeaderFuture: 'blue-2',\n          backgroundHeaderFuture: 'blue-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-8',\n          backgroundWorkWeekPast: 'blue-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-10',\n          // label\n          colorDayLabelOutside: 'blue-2',\n          backgroundDayLabelOutside: 'blue-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-10'\n        }\n      ]\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n"},"729f":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      :interval-minutes="15"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"75de":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="overflow: hidden; max-width: 800px; width: 100%;">\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      v-touch-swipe.mouse.left.right="handleSwipe"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\n// import { stopAndPrevent } from \'quasar/src/utils/event\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === \'right\') {\n            this.calendarPrev()\n          } else if (info.direction === \'left\') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      // stopAndPrevent(evt)\n      evt.cancelable !== false && evt.preventDefault()\n      evt.stopPropagation()\n    }\n  }\n}\n<\/script>\n'},"7a43":function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"day\"\n      locale=\"en-us\"\n      class=\"calendar-container\"\n      style=\"height: 400px;\"\n    >\n      <template #day-header=\"{ date }\">\n        <div class=\"row justify-center\">\n          <template v-for=\"(event, index) in eventsMap[date]\">\n            <q-badge\n              v-if=\"!event.time\"\n              :key=\"index\"\n              style=\"width: 100%; cursor: pointer;\"\n              :class=\"badgeClasses(event, 'header')\"\n              :style=\"badgeStyles(event, 'header')\"\n            >\n              <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n            </q-badge>\n            <q-badge\n              v-else\n              :key=\"index\"\n              class=\"q-ma-xs\"\n              :class=\"badgeClasses(event, 'header')\"\n              :style=\"badgeStyles(event, 'header')\"\n              style=\"width: 10px; max-width: 10px; height: 10px; max-height: 10px\"\n            />\n          </template>\n        </div>\n      </template>\n\n      <template #day-body=\"{ date, timeStartPos, timeDurationHeight }\">\n        <template v-for=\"(event, index) in getEvents(date)\">\n          <q-badge\n            v-if=\"event.time\"\n            :key=\"index\"\n            class=\"my-event justify-center ellipsis\"\n            :class=\"badgeClasses(event, 'body')\"\n            :style=\"badgeStyles(event, 'body', timeStartPos, timeDurationHeight)\"\n          >\n            <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n          </q-badge>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\n// normally you would not import \"all\" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from 'ui' // ui is aliased from '@quasar/quasar-ui-qcalendar'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = QCalendar.parseDate(newDay)\n  return tm.date\n}\n\nconst reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/\n\nfunction textToRgb (color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  const m = reRGBA.exec(color)\n  if (m) {\n    const rgb = {\n      r: Math.min(255, parseInt(m[2], 10)),\n      g: Math.min(255, parseInt(m[3], 10)),\n      b: Math.min(255, parseInt(m[4], 10))\n    }\n    if (m[1]) {\n      rgb.a = Math.min(1, parseFloat(m[5]))\n    }\n    return rgb\n  }\n  return hexToRgb(color)\n}\n\nfunction hexToRgb (hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  hex = hex.replace(/^#/, '')\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  } else if (hex.length === 4) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n  }\n\n  const num = parseInt(hex, 16)\n\n  return hex.length > 6\n    ? { r: num >> 24 & 255, g: num >> 16 & 255, b: num >> 8 & 255, a: Math.round((num & 255) / 2.55) }\n    : { r: num >> 16, g: num >> 8 & 255, b: num & 255 }\n}\n\nfunction luminosity (color) {\n  if (typeof color !== 'string' && (!color || color.r === void 0)) {\n    throw new TypeError('Expected a string or a {r, g, b} object as color')\n  }\n\n  const\n    rgb = typeof color === 'string' ? textToRgb(color) : color,\n    r = rgb.r / 255,\n    g = rgb.g / 255,\n    b = rgb.b / 255,\n    R = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4),\n    G = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4),\n    B = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4)\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(CURRENT_DAY.getDate()),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(CURRENT_DAY.getDate()),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(22),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(22),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(22),\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(29),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  computed: {\n    // convert the events into a map of lists keyed by date\n    eventsMap () {\n      const map = {}\n      this.events.forEach((event) => (map[event.date] = map[event.date] || []).push(event))\n      return map\n    }\n  },\n\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const currentDate = QCalendar.parsed(dt)\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        const event = this.events[i]\n        if (event.date === dt) {\n          if (event.time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = QCalendar.parsed(event.date + ' ' + event.time)\n              const endTime = QCalendar.addToDate(startTime, { minute: event.duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = QCalendar.parsed(events[j].date + ' ' + events[j].time)\n                const endTime2 = QCalendar.addToDate(startTime2, { minute: events[j].duration })\n                if (QCalendar.isBetweenDates(startTime, startTime2, endTime2) || QCalendar.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  event.side = 'right'\n                  events.push(event)\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            event.side = void 0\n            events.push(event)\n          }\n        } else if (event.days) {\n          // check for overlapping dates\n          const startDate = QCalendar.parsed(event.date)\n          const endDate = QCalendar.addToDate(startDate, { day: event.days })\n          if (QCalendar.isBetweenDates(currentDate, startDate, endDate)) {\n            events.push(event)\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n\n<style lang=\"sass\">\n  // this page\n  .calendar-container\n    position: relative\n\n  .my-event\n    width: 100%\n    position: absolute\n    font-size: 12px\n\n  .full-width\n    left: 0\n    width: 100%\n\n  .left-side\n    left: 0\n    width: 49.75%\n\n  .right-side\n    left: 50.25%\n    width: 49.75%\n  </style>\n"},"7b28":function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"week-agenda\"\n      :weekdays=\"[1,2,3,4,5,6,0]\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    >\n      <template #day-body=\"day\">\n        <template v-for=\"(agenda) in getAgenda(day)\">\n          <div\n            :key=\"day.date + agenda.time\"\n            :label=\"agenda.time\"\n            class=\"justify-start q-ma-sm shadow-5 bg-grey-6\"\n          >\n            <div v-if=\"agenda.avatar\" class=\"row justify-center\" style=\"margin-top: 30px; width: 100%;\">\n              <q-avatar style=\"margin-top: -25px; margin-bottom: 10px; font-size: 60px; max-height: 50px;\">\n                <img :src=\"agenda.avatar\" style=\"border: #9e9e9e solid 5px;\">\n              </q-avatar>\n            </div>\n            <div class=\"col-12 q-px-sm\">\n              <strong>{{ agenda.time }}</strong>\n            </div>\n            <div v-if=\"agenda.desc\" class=\"col-12 q-px-sm\" style=\"font-size: 10px;\">\n              {{ agenda.desc }}\n            </div>\n          </div>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      agenda: {\n        // value represents day of the week\n        1: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png',\n            desc: 'Meeting with CEO'\n          },\n          {\n            time: '08:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png',\n            desc: 'Meeting with HR'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg',\n            desc: 'Meeting with Karen'\n          }\n        ],\n        2: [\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg',\n            desc: 'Meeting with Alisha'\n          },\n          {\n            time: '17:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg',\n            desc: 'Meeting with Sarah'\n          }\n        ],\n        3: [\n          {\n            time: '08:00',\n            desc: 'Stand-up SCRUM',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '10:00',\n            desc: 'Sprint planning',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg'\n          }\n        ],\n        4: [\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          }\n        ],\n        5: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '09:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar4.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar5.jpg'\n          },\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          },\n          {\n            time: '13:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '14:00',\n            avatar: 'https://cdn.quasar.dev/img/linux-avatar.png'\n          },\n          {\n            time: '14:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png'\n          },\n          {\n            time: '15:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '15:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '16:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          }\n        ]\n      }\n    }\n  },\n\n  methods: {\n    getAgenda (day) {\n      return this.agenda[parseInt(day.weekday, 10)]\n    }\n  }\n}\n<\/script>\n"},"7b6e":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      :interval-count="4"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"81fd":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="week"\n      locale="en-us"\n      v-touch-swipe.mouse.left.right="handleSwipe"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n      style="height: 400px; overflow: hidden"\n    />\n  </div>\n</template>\n\n<script>\n// import { stopAndPrevent } from \'quasar/src/utils/event\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === \'right\') {\n            this.calendarPrev()\n          } else if (info.direction === \'left\') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      // stopAndPrevent(evt)\n      evt.cancelable !== false && evt.preventDefault()\n      evt.stopPropagation()\n    }\n  }\n}\n<\/script>\n'},"84c7":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      short-interval-label\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},8507:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="3day"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'DayView\',\n\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"87fc":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      now\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},8804:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      short-weekday-label\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"8a2d":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :weekdays="[1, 2, 3, 4, 5, 6, 0]"\n      view="week"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"8a6d":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="prev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="next" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <q-calendar\n      v-model="selectedDate"\n      column-header-after\n      :column-count="columnCount"\n      :column-index-start="columnIndexStart"\n      view="day"\n      locale="en-us"\n      style="height: 400px;"\n    >\n      <template #column-header-after="day">\n        <div class="q-ma-xs">\n          <q-item v-if="day.index === 0" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar1.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Mary</q-item-label>\n              <q-item-label caption>Content Writer</q-item-label>\n            </q-item-section>\n          </q-item>\n          <q-item v-if="day.index === 1" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar2.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Jessica</q-item-label>\n              <q-item-label caption>Designer</q-item-label>\n            </q-item-section>\n          </q-item>\n          <q-item v-if="day.index === 2" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar4.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Scott</q-item-label>\n              <q-item-label caption>Software Developer</q-item-label>\n            </q-item-section>\n          </q-item>\n\n          <q-item v-if="day.index === 3" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar3.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Elaine</q-item-label>\n              <q-item-label caption>Support Engineer</q-item-label>\n            </q-item-section>\n          </q-item>\n          <q-item v-if="day.index === 4" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar5.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Carol</q-item-label>\n              <q-item-label caption>Content Analyst</q-item-label>\n            </q-item-section>\n          </q-item>\n          <q-item v-if="day.index === 5" clickable v-ripple>\n            <q-item-section side>\n              <q-avatar size="42px">\n                <img src="https://cdn.quasar.dev/img/avatar6.jpg" />\n              </q-avatar>\n            </q-item-section>\n            <q-item-section>\n              <q-item-label>Heather</q-item-label>\n              <q-item-label caption>Team Lead</q-item-label>\n            </q-item-section>\n          </q-item>\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      columnCount: 3,\n      totalPages: 2,\n      currentPage: 0\n    }\n  },\n  computed: {\n    columnIndexStart () {\n      return this.currentPage * this.columnCount\n    }\n  },\n  methods: {\n    next () {\n      if (this.currentPage + 1 === this.totalPages) return\n      ++this.currentPage\n    },\n    prev () {\n      if (this.currentPage === 0) return\n      --this.currentPage\n    }\n  }\n}\n<\/script>\n'},"8b09":function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <div class=\"col-12 full-width q-pa-md\">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        class=\"col-12\"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"week\"\n      locale=\"en-us\"\n      enable-theme\n      :theme=\"theme\"\n      style=\"height: 400px;\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      theme: {},\n      themes: [\n        {\n          name: 'default'\n        },\n        {\n          name: 'dark',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-grey-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-grey-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-grey-10',\n          colorBodyCurrent: 'blue-grey-2',\n          backgroundBodyCurrent: 'blue-grey-10',\n          colorBodyFuture: 'blue-grey-2',\n          backgroundBodyFuture: 'blue-grey-10',\n          // header - weekly only\n          colorHeader: 'blue-grey-2',\n          backgroundHeader: 'blue-grey-10',\n          colorHeaderOutside: 'blue-grey-2',\n          backgroundHeaderOutside: 'blue-grey-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-grey-10',\n          colorHeaderCurrent: 'blue-grey-2',\n          backgroundHeaderCurrent: 'blue-grey-10',\n          colorHeaderFuture: 'blue-grey-2',\n          backgroundHeaderFuture: 'blue-grey-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-grey-8',\n          backgroundWorkWeekPast: 'blue-grey-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-grey-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-grey-10',\n          // label\n          colorDayLabelOutside: 'blue-grey-2',\n          backgroundDayLabelOutside: 'blue-grey-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-grey-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-grey-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-grey-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-grey-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-grey-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-grey-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-grey-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-grey-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-grey-10'\n        },\n        {\n          name: 'teal',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'teal-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'teal-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'teal-10',\n          colorBodyCurrent: 'teal-2',\n          backgroundBodyCurrent: 'teal-10',\n          colorBodyFuture: 'teal-2',\n          backgroundBodyFuture: 'teal-10',\n          // header - weekly only\n          colorHeader: 'teal-2',\n          backgroundHeader: 'teal-10',\n          colorHeaderOutside: 'teal-2',\n          backgroundHeaderOutside: 'teal-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'teal-10',\n          colorHeaderCurrent: 'teal-2',\n          backgroundHeaderCurrent: 'teal-10',\n          colorHeaderFuture: 'teal-2',\n          backgroundHeaderFuture: 'teal-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'teal-8',\n          backgroundWorkWeekPast: 'teal-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'teal-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'teal-10',\n          // label\n          colorDayLabelOutside: 'teal-2',\n          backgroundDayLabelOutside: 'teal-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'teal-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'teal-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'teal-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'teal-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'teal-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'teal-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'teal-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'teal-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'teal-10'\n        },\n        {\n          name: 'brown',\n          // body\n          colorBody: 'brown-2',\n          backgroundBody: 'brown-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'brown-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'brown-10',\n          colorBodyCurrent: 'brown-2',\n          backgroundBodyCurrent: 'brown-10',\n          colorBodyFuture: 'brown-2',\n          backgroundBodyFuture: 'brown-10',\n          // header - weekly only\n          colorHeader: 'brown-2',\n          backgroundHeader: 'brown-10',\n          colorHeaderOutside: 'brown-2',\n          backgroundHeaderOutside: 'brown-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'brown-10',\n          colorHeaderCurrent: 'brown-2',\n          backgroundHeaderCurrent: 'brown-10',\n          colorHeaderFuture: 'brown-2',\n          backgroundHeaderFuture: 'brown-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'brown-8',\n          backgroundWorkWeekPast: 'brown-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'brown-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'brown-10',\n          // label\n          colorDayLabelOutside: 'brown-2',\n          backgroundDayLabelOutside: 'brown-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'brown-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'brown-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'brown-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'brown-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'brown-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'brown-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'brown-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'brown-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'brown-10'\n        },\n        {\n          name: 'deep purple',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'deep-purple-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'deep-purple-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'deep-purple-10',\n          colorBodyCurrent: 'deep-purple-2',\n          backgroundBodyCurrent: 'deep-purple-10',\n          colorBodyFuture: 'deep-purple-2',\n          backgroundBodyFuture: 'deep-purple-10',\n          // header - weekly only\n          colorHeader: 'deep-purple-2',\n          backgroundHeader: 'deep-purple-10',\n          colorHeaderOutside: 'deep-purple-2',\n          backgroundHeaderOutside: 'deep-purple-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'deep-purple-10',\n          colorHeaderCurrent: 'deep-purple-2',\n          backgroundHeaderCurrent: 'deep-purple-10',\n          colorHeaderFuture: 'deep-purple-2',\n          backgroundHeaderFuture: 'deep-purple-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'deep-purple-8',\n          backgroundWorkWeekPast: 'deep-purple-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'deep-purple-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'deep-purple-10',\n          // label\n          colorDayLabelOutside: 'deep-purple-2',\n          backgroundDayLabelOutside: 'deep-purple-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'deep-purple-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'deep-purple-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'deep-purple-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'deep-purple-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'deep-purple-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'deep-purple-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'deep-purple-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'deep-purple-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'deep-purple-10'\n        },\n        {\n          name: 'indigo',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'indigo-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'indigo-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'indigo-10',\n          colorBodyCurrent: 'indigo-2',\n          backgroundBodyCurrent: 'indigo-10',\n          colorBodyFuture: 'indigo-2',\n          backgroundBodyFuture: 'indigo-10',\n          // header - weekly only\n          colorHeader: 'indigo-2',\n          backgroundHeader: 'indigo-10',\n          colorHeaderOutside: 'indigo-2',\n          backgroundHeaderOutside: 'indigo-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'indigo-10',\n          colorHeaderCurrent: 'indigo-2',\n          backgroundHeaderCurrent: 'indigo-10',\n          colorHeaderFuture: 'indigo-2',\n          backgroundHeaderFuture: 'indigo-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'indigo-8',\n          backgroundWorkWeekPast: 'indigo-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'indigo-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'indigo-10',\n          // label\n          colorDayLabelOutside: 'indigo-2',\n          backgroundDayLabelOutside: 'indigo-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'indigo-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'indigo-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'indigo-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'indigo-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'indigo-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'indigo-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'indigo-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'indigo-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'indigo-10'\n        },\n        {\n          name: 'blue',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-10',\n          colorBodyCurrent: 'blue-2',\n          backgroundBodyCurrent: 'blue-10',\n          colorBodyFuture: 'blue-2',\n          backgroundBodyFuture: 'blue-10',\n          // header - weekly only\n          colorHeader: 'blue-2',\n          backgroundHeader: 'blue-10',\n          colorHeaderOutside: 'blue-2',\n          backgroundHeaderOutside: 'blue-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-10',\n          colorHeaderCurrent: 'blue-2',\n          backgroundHeaderCurrent: 'blue-10',\n          colorHeaderFuture: 'blue-2',\n          backgroundHeaderFuture: 'blue-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-8',\n          backgroundWorkWeekPast: 'blue-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-10',\n          // label\n          colorDayLabelOutside: 'blue-2',\n          backgroundDayLabelOutside: 'blue-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-10'\n        }\n      ]\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n"},9186:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :weekdays="[1, 2, 3, 4, 5]"\n      view="week"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"926c":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"94c0":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week-agenda"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},9579:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="scheduler"\n      :resources="resources"\n      locale="en-us"\n      style="height: 500px;"\n    >\n      <template #scheduler-day-header="{ day }">\n        <div class="row justify-center items-center">\n          <q-btn class="fit">Day: {{ day.day }}</q-btn>\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      resources: [\n        { label: \'John\' },\n        { label: \'Mary\' },\n        { label: \'Susan\' },\n        { label: \'Olivia\' },\n        { label: \'Board Room\' },\n        { label: \'Room-1\' },\n        { label: \'Room-2\' }\n      ]\n    }\n  }\n}\n<\/script>\n'},"9f44":function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n    ref="calendar"\n      v-model="currentDate"\n      view="week"\n      locale="en-us"\n      style="height: 400px;"\n    >\n      \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n      <template #day-container="{ date }">\n        <div class="week-view-current-time-indicator" :style="style" />\n        <div class="week-view-current-time-line" :style="style" />\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\n// normally you would not import "all" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from \'ui\' // ui is aliased from \'@quasar/quasar-ui-qcalendar\'\n\nexport default {\n  data () {\n    return {\n      currentDate: void 0,\n      currentTime: void 0,\n      intervalId: null,\n      timeStartPos: 0\n    }\n  },\n\n  mounted () {\n    this.adjustCurrentTime()\n    // now, adjust the time every minute\n    this.intervalId = setInterval(() => {\n      this.adjustCurrentTime()\n    }, 60000)\n  },\n\n  beforeDestroy () {\n    clearInterval(this.intervalId)\n  },\n\n  computed: {\n    style () {\n      return {\n        top: this.timeStartPos + \'px\'\n      }\n    }\n  },\n\n  methods: {\n    adjustCurrentTime () {\n      const now = new Date()\n      const p = QCalendar.parseDate(now)\n      this.currentDate = p.date\n      this.currentTime = p.time\n      this.timeStartPos = this.$refs.calendar.timeStartPos(this.currentTime)\n    }\n  }\n}\n<\/script>\n\n<style lang="sass">\n.week-view-current-time-indicator\n  position: absolute\n  left: 45px\n  height: 10px\n  width: 10px\n  margin-top: -4px\n  background-color: rgba(0, 0, 255, .5)\n  border-radius: 50%\n\n.week-view-current-time-line\n  position: absolute\n  left: 55px\n  border-top: rgba(0, 0, 255, .5) 2px solid\n  width: calc(100% - 50px - 5px)\n\n.body--dark\n  .week-view-current-time-indicator\n    background-color: rgba(255, 255, 0, .85)\n\n  .week-view-current-time-line\n    border-top: rgba(255, 255, 0, .85) 2px solid\n\n</style>\n'},a225:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="scheduler"\n      :resources="resources"\n      locale="en-us"\n      style="height: 500px;"\n    >\n      \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n      <template #scheduler-resources-header="days">\n        <div class="full-height row justify-center items-center">\n          <q-btn label="here" />\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      resources: [\n        { label: \'John\' },\n        { label: \'Mary\' },\n        { label: \'Susan\' },\n        { label: \'Olivia\' },\n        { label: \'Board Room\' },\n        { label: \'Room-1\' },\n        { label: \'Room-2\' }\n      ]\n    }\n  }\n}\n<\/script>\n'},a2cb:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      :interval-height="100"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},a843:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"week-agenda\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    >\n      <template #day-body=\"day\">\n        <template v-for=\"(agenda) in getAgenda(day)\">\n          <div\n            :key=\"day.date + agenda.time\"\n            :label=\"agenda.time\"\n            class=\"justify-start q-ma-sm shadow-5 bg-grey-6\"\n          >\n            <div v-if=\"agenda.avatar\" class=\"row justify-center\" style=\"margin-top: 30px; width: 100%;\">\n              <q-avatar style=\"margin-top: -25px; margin-bottom: 10px; font-size: 60px; max-height: 50px;\">\n                <img :src=\"agenda.avatar\" style=\"border: #9e9e9e solid 5px;\">\n              </q-avatar>\n            </div>\n            <div class=\"col-12 q-px-sm\">\n              <strong>{{ agenda.time }}</strong>\n            </div>\n            <div v-if=\"agenda.desc\" class=\"col-12 q-px-sm\" style=\"font-size: 10px;\">\n              {{ agenda.desc }}\n            </div>\n          </div>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      agenda: {\n        // value represents day of the week\n        1: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png',\n            desc: 'Meeting with CEO'\n          },\n          {\n            time: '08:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png',\n            desc: 'Meeting with HR'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg',\n            desc: 'Meeting with Karen'\n          }\n        ],\n        2: [\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg',\n            desc: 'Meeting with Alisha'\n          },\n          {\n            time: '17:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg',\n            desc: 'Meeting with Sarah'\n          }\n        ],\n        3: [\n          {\n            time: '08:00',\n            desc: 'Stand-up SCRUM',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '10:00',\n            desc: 'Sprint planning',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg'\n          }\n        ],\n        4: [\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          }\n        ],\n        5: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '09:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar4.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar5.jpg'\n          },\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          },\n          {\n            time: '13:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '14:00',\n            avatar: 'https://cdn.quasar.dev/img/linux-avatar.png'\n          },\n          {\n            time: '14:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png'\n          },\n          {\n            time: '15:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '15:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '16:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          }\n        ]\n      }\n    }\n  },\n\n  methods: {\n    getAgenda (day) {\n      return this.agenda[parseInt(day.weekday, 10)]\n    }\n  }\n}\n<\/script>\n"},a882:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      locale="en-us"\n      now\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},a96e:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      :disabled-days="disabledDays"\n      :interval-style="modifiedStyle"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\',\n      disabledDays: [\n        \'2019-04-02\',\n        \'2019-04-03\',\n        \'2019-04-04\',\n        \'2019-04-05\'\n      ]\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: \'#ffcb9c!important\'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n'},ad05:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      hour24-format\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},b07d:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :column-count="3"\n      view="day"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},b31d:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      :hide-header="true"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},b346:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day"\n      locale="en-us"\n      :interval-start="8"\n      :interval-count="10"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},b7ff:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <div class="q-gutter-sm">\n      <q-checkbox v-model="mobile" label="Use Touch (set if on mobile)" />\n    </div>\n    <q-separator></q-separator>\n    <div style="overflow: hidden;">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="month"\n        locale="en-us"\n        :selected-start-end-dates="startEndDates"\n        :day-style="styleDay"\n        @mousedown:day="onMouseDownDay"\n        @mouseup:day="onMouseUpDay"\n        @mousemove:day="onMouseMoveDay"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n// normally you would not import "all" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from \'ui\' // ui is aliased from \'@quasar/quasar-ui-qcalendar\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      anchorTimestamp: null,\n      otherTimestamp: null,\n      mouseDown: false,\n      mobile: false\n    }\n  },\n\n  computed: {\n    startEndDates () {\n      const dates = []\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.anchorDayIdentifier <= this.otherDayIdentifier) {\n          dates.push(this.anchorTimestamp.date, this.otherTimestamp.date)\n        } else {\n          dates.push(this.otherTimestamp.date, this.anchorTimestamp.date)\n        }\n      }\n      return dates\n    },\n    anchorDayIdentifier () {\n      if (this.anchorTimestamp !== null) {\n        return QCalendar.getDayIdentifier(this.anchorTimestamp)\n      }\n      return false\n    },\n    otherDayIdentifier () {\n      if (this.otherTimestamp !== null) {\n        return QCalendar.getDayIdentifier(this.otherTimestamp)\n      }\n      return false\n    },\n    lowIdentifier () {\n      // returns lowest of the two values\n      return Math.min(this.anchorDayIdentifier, this.otherDayIdentifier)\n    },\n    highIdentifier () {\n      // returns highest of the two values\n      return Math.max(this.anchorDayIdentifier, this.otherDayIdentifier)\n    }\n  },\n\n  methods: {\n    styleDay (timestamp) {\n      if (this.anchorDayIdentifier !== false && this.otherDayIdentifier !== false) {\n        if (this.isBetween(timestamp) === true) {\n          return {\n            color: \'blue\',\n            background: \'#CCCCFF\'\n          }\n        }\n      }\n    },\n\n    isBetween (timestamp) {\n      const nowIdentifier = QCalendar.getDayIdentifier(timestamp)\n      return this.lowIdentifier <= nowIdentifier && this.highIdentifier >= nowIdentifier\n    },\n\n    onMouseDownDay (e) {\n      if (this.mobile === true &&\n        this.anchorTimestamp !== null &&\n        this.otherTimestamp !== null &&\n        this.anchorTimestamp.date === this.otherTimestamp.date) {\n        this.otherTimestamp = e\n        this.mouseDown = false\n        return\n      }\n      // mouse is down, start selection and capture current\n      this.mouseDown = true\n      this.anchorTimestamp = e\n      this.otherTimestamp = e\n    },\n\n    onMouseUpDay (e) {\n      // mouse is up, capture last and cancel selection\n      this.otherTimestamp = e\n      this.mouseDown = false\n    },\n\n    onMouseMoveDay (e) {\n      if (this.mouseDown === true) {\n        this.otherTimestamp = e\n      }\n    }\n  }\n}\n<\/script>\n'},b8e9:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n      color="#FF0000"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},bbdd:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5]"\n    view="month"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'2019-04-01\'\n    }\n  }\n}\n<\/script>\n'},bf42:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      ref="calendar"\n      v-model="currentDate"\n      view="day"\n      locale="en-us"\n      style="height: 400px;"\n    >\n      \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n      <template #day-container="{ date }">\n        <div class="day-view-current-time-indicator" :style="style" />\n        <div class="day-view-current-time-line" :style="style" />\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\n// normally you would not import "all" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from \'ui\' // ui is aliased from \'@quasar/quasar-ui-qcalendar\'\n\nexport default {\n  data () {\n    return {\n      currentDate: void 0,\n      currentTime: void 0,\n      intervalId: null,\n      timeStartPos: 0\n    }\n  },\n\n  mounted () {\n    this.adjustCurrentTime()\n    // now, adjust the time every minute\n    this.intervalId = setInterval(() => {\n      this.adjustCurrentTime()\n    }, 60000)\n  },\n\n  beforeDestroy () {\n    clearInterval(this.intervalId)\n  },\n\n  computed: {\n    style () {\n      return {\n        top: this.timeStartPos + \'px\'\n      }\n    }\n  },\n\n  methods: {\n    adjustCurrentTime () {\n      const now = new Date()\n      const p = QCalendar.parseDate(now)\n      this.currentDate = p.date\n      this.currentTime = p.time\n      this.timeStartPos = this.$refs.calendar.timeStartPos(this.currentTime)\n    }\n  }\n}\n<\/script>\n\n<style lang="sass">\n.day-view-current-time-indicator\n  position: absolute\n  left: 45px\n  height: 10px\n  width: 10px\n  margin-top: -4px\n  background-color: rgba(0, 0, 255, .5)\n  border-radius: 50%\n\n.day-view-current-time-line\n  position: absolute\n  left: 55px\n  border-top: rgba(0, 0, 255, .5) 2px solid\n  width: calc(100% - 50px - 5px)\n\n.body--dark\n  .day-view-current-time-indicator\n    background-color: rgba(255, 255, 0, .85)\n\n  .day-view-current-time-line\n    border-top: rgba(255, 255, 0, .85) 2px solid\n\n</style>\n'},c0bc:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"scheduler\"\n      :resources=\"resources\"\n      :disabled-days=\"disabledDays\"\n      :resource-style=\"modifiedStyle\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '2019-04-01',\n      disabledDays: [\n        '2019-04-02',\n        '2019-04-03',\n        '2019-04-04',\n        '2019-04-05'\n      ],\n      resources: [\n        { label: 'John' },\n        { label: 'Mary' },\n        { label: 'Susan' },\n        { label: 'Olivia' },\n        { label: 'Board Room' },\n        { label: 'Room-1' },\n        { label: 'Room-2' }\n      ]\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.day.disabled === true) {\n        return {\n          backgroundColor: '#ffcb9c!important'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n"},c76b:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-splitter\n      v-model=\"splitterModel\"\n      :limits=\"[30, 100]\"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <q-calendar\n          ref=\"calendar\"\n          v-model=\"selectedDate\"\n          view=\"month\"\n          locale=\"en-us\"\n          :mini-mode=\"miniMode\"\n        >\n          <template #day=\"{ date, miniMode }\">\n            <template v-for=\"(event, index) in getEvents(date)\">\n              <template v-if=\"miniMode\">\n                <q-badge\n                  :key=\"index\"\n                  style=\"width: 5px; max-width: 5px; height: 5px; max-height: 5px\"\n                  class=\"q-ma-xs q-event\"\n                  :class=\"badgeClasses(event, 'day')\"\n                  :style=\"badgeStyles(event, 'day')\"\n                ></q-badge>\n              </template>\n              <template v-else>\n                <q-badge\n                  :key=\"index\"\n                  style=\"width: 100%; cursor: pointer; height: 16px; max-height: 16px\"\n                  class=\"q-mb-xs q-event\"\n                  :class=\"badgeClasses(event, 'day')\"\n                  :style=\"badgeStyles(event, 'day')\"\n                >\n                  <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n                </q-badge>\n              </template>\n            </template>\n          </template>\n        </q-calendar>\n      </template>\n      <template v-slot:separator>\n        <q-avatar color=\"primary\" text-color=\"white\" size=\"40px\" icon=\"drag_indicator\" />\n      </template>\n      <template v-slot:after>\n        <div style=\"min-width: 20px\"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\n// normally you would not import \"all\" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from 'ui' // ui is aliased from '@quasar/quasar-ui-qcalendar'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = QCalendar.parseDate(newDay)\n  return tm.date\n}\n\nconst reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/\n\nfunction textToRgb (color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  const m = reRGBA.exec(color)\n  if (m) {\n    const rgb = {\n      r: Math.min(255, parseInt(m[2], 10)),\n      g: Math.min(255, parseInt(m[3], 10)),\n      b: Math.min(255, parseInt(m[4], 10))\n    }\n    if (m[1]) {\n      rgb.a = Math.min(1, parseFloat(m[5]))\n    }\n    return rgb\n  }\n  return hexToRgb(color)\n}\n\nfunction hexToRgb (hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  hex = hex.replace(/^#/, '')\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  } else if (hex.length === 4) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n  }\n\n  const num = parseInt(hex, 16)\n\n  return hex.length > 6\n    ? { r: num >> 24 & 255, g: num >> 16 & 255, b: num >> 8 & 255, a: Math.round((num & 255) / 2.55) }\n    : { r: num >> 16, g: num >> 8 & 255, b: num & 255 }\n}\n\nfunction luminosity (color) {\n  if (typeof color !== 'string' && (!color || color.r === void 0)) {\n    throw new TypeError('Expected a string or a {r, g, b} object as color')\n  }\n\n  const\n    rgb = typeof color === 'string' ? textToRgb(color) : color,\n    r = rgb.r / 255,\n    g = rgb.g / 255,\n    b = rgb.b / 255,\n    R = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4),\n    G = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4),\n    B = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4)\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B\n}\n\nexport default {\n  data () {\n    return {\n      splitterModel: 90, // start at 90%\n      selectedDate: '',\n      miniMode: false,\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(8),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(8),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(15),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(15),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(16),\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(22),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  },\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const currentDate = QCalendar.parseTimestamp(dt)\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = QCalendar.parseTimestamp(this.events[i].date + ' ' + this.events[i].time)\n              const endTime = QCalendar.addToDate(startTime, { minute: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = QCalendar.parseTimestamp(events[j].date + ' ' + events[j].time)\n                const endTime2 = QCalendar.addToDate(startTime2, { minute: events[j].duration })\n                if (QCalendar.isBetweenDates(startTime, startTime2, endTime2) || QCalendar.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = QCalendar.parseTimestamp(this.events[i].date)\n          const endDate = QCalendar.addToDate(startDate, { day: this.events[i].days })\n          if (QCalendar.isBetweenDates(currentDate, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n"},cae1:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-splitter\n      v-model="splitterModel"\n      :limits="[30, 100]"\n      emit-immediately\n    >\n      <template v-slot:before>\n        <q-calendar\n          ref="calendar"\n          v-model="selectedDate"\n          view="month"\n          locale="en-us"\n          :mini-mode="miniMode"\n        />\n      </template>\n      <template v-slot:separator>\n        <q-avatar color="primary" text-color="white" size="40px" icon="drag_indicator" />\n      </template>\n      <template v-slot:after>\n        <div style="min-width: 20px"></div>\n      </template>\n    </q-splitter>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      splitterModel: 90,\n      selectedDate: \'\',\n      miniMode: false\n    }\n  },\n  watch: {\n    splitterModel (val) {\n      const rect = this.$refs.calendar.$el.getBoundingClientRect()\n      this.miniMode = rect.width < 500\n    }\n  }\n}\n<\/script>\n'},cba0:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="scheduler"\n        :resources="resources"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      resources: [\n        { label: \'John\' },\n        { label: \'Mary\' },\n        { label: \'Susan\' },\n        { label: \'Olivia\' },\n        { label: \'Board Room\' },\n        { label: \'Room-1\' },\n        { label: \'Room-2\' }\n      ]\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},d221:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <div class=\"full-width q-pa-md\">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        class=\"col-12\"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"week-agenda\"\n      enable-theme\n      :theme=\"theme\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    >\n      <template #day-body=\"day\">\n        <template v-for=\"(agenda) in getAgenda(day)\">\n          <div\n            :key=\"day.date + agenda.time\"\n            :label=\"agenda.time\"\n            class=\"justify-start q-ma-sm shadow-5 bg-grey-6\"\n          >\n            <div v-if=\"agenda.avatar\" class=\"row justify-center\" style=\"margin-top: 30px; width: 100%;\">\n              <q-avatar style=\"margin-top: -25px; margin-bottom: 10px; font-size: 60px; max-height: 50px;\">\n                <img :src=\"agenda.avatar\" style=\"border: #9e9e9e solid 5px;\">\n              </q-avatar>\n            </div>\n            <div class=\"col-12 q-px-sm\">\n              <strong>{{ agenda.time }}</strong>\n            </div>\n            <div v-if=\"agenda.desc\" class=\"col-12 q-px-sm\" style=\"font-size: 10px;\">\n              {{ agenda.desc }}\n            </div>\n          </div>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      theme: {},\n      themes: [\n        {\n          name: 'default'\n        },\n        {\n          name: 'dark',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-grey-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-grey-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-grey-10',\n          colorBodyCurrent: 'blue-grey-2',\n          backgroundBodyCurrent: 'blue-grey-10',\n          colorBodyFuture: 'blue-grey-2',\n          backgroundBodyFuture: 'blue-grey-10',\n          // header - weekly only\n          colorHeader: 'blue-grey-2',\n          backgroundHeader: 'blue-grey-10',\n          colorHeaderOutside: 'blue-grey-2',\n          backgroundHeaderOutside: 'blue-grey-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-grey-10',\n          colorHeaderCurrent: 'blue-grey-2',\n          backgroundHeaderCurrent: 'blue-grey-10',\n          colorHeaderFuture: 'blue-grey-2',\n          backgroundHeaderFuture: 'blue-grey-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-grey-8',\n          backgroundWorkWeekPast: 'blue-grey-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-grey-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-grey-10',\n          // label\n          colorDayLabelOutside: 'blue-grey-2',\n          backgroundDayLabelOutside: 'blue-grey-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-grey-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-grey-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-grey-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-grey-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-grey-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-grey-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-grey-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-grey-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-grey-10'\n        },\n        {\n          name: 'teal',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'teal-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'teal-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'teal-10',\n          colorBodyCurrent: 'teal-2',\n          backgroundBodyCurrent: 'teal-10',\n          colorBodyFuture: 'teal-2',\n          backgroundBodyFuture: 'teal-10',\n          // header - weekly only\n          colorHeader: 'teal-2',\n          backgroundHeader: 'teal-10',\n          colorHeaderOutside: 'teal-2',\n          backgroundHeaderOutside: 'teal-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'teal-10',\n          colorHeaderCurrent: 'teal-2',\n          backgroundHeaderCurrent: 'teal-10',\n          colorHeaderFuture: 'teal-2',\n          backgroundHeaderFuture: 'teal-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'teal-8',\n          backgroundWorkWeekPast: 'teal-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'teal-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'teal-10',\n          // label\n          colorDayLabelOutside: 'teal-2',\n          backgroundDayLabelOutside: 'teal-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'teal-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'teal-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'teal-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'teal-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'teal-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'teal-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'teal-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'teal-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'teal-10'\n        },\n        {\n          name: 'brown',\n          // body\n          colorBody: 'brown-2',\n          backgroundBody: 'brown-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'brown-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'brown-10',\n          colorBodyCurrent: 'brown-2',\n          backgroundBodyCurrent: 'brown-10',\n          colorBodyFuture: 'brown-2',\n          backgroundBodyFuture: 'brown-10',\n          // header - weekly only\n          colorHeader: 'brown-2',\n          backgroundHeader: 'brown-10',\n          colorHeaderOutside: 'brown-2',\n          backgroundHeaderOutside: 'brown-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'brown-10',\n          colorHeaderCurrent: 'brown-2',\n          backgroundHeaderCurrent: 'brown-10',\n          colorHeaderFuture: 'brown-2',\n          backgroundHeaderFuture: 'brown-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'brown-8',\n          backgroundWorkWeekPast: 'brown-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'brown-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'brown-10',\n          // label\n          colorDayLabelOutside: 'brown-2',\n          backgroundDayLabelOutside: 'brown-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'brown-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'brown-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'brown-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'brown-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'brown-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'brown-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'brown-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'brown-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'brown-10'\n        },\n        {\n          name: 'deep purple',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'deep-purple-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'deep-purple-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'deep-purple-10',\n          colorBodyCurrent: 'deep-purple-2',\n          backgroundBodyCurrent: 'deep-purple-10',\n          colorBodyFuture: 'deep-purple-2',\n          backgroundBodyFuture: 'deep-purple-10',\n          // header - weekly only\n          colorHeader: 'deep-purple-2',\n          backgroundHeader: 'deep-purple-10',\n          colorHeaderOutside: 'deep-purple-2',\n          backgroundHeaderOutside: 'deep-purple-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'deep-purple-10',\n          colorHeaderCurrent: 'deep-purple-2',\n          backgroundHeaderCurrent: 'deep-purple-10',\n          colorHeaderFuture: 'deep-purple-2',\n          backgroundHeaderFuture: 'deep-purple-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'deep-purple-8',\n          backgroundWorkWeekPast: 'deep-purple-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'deep-purple-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'deep-purple-10',\n          // label\n          colorDayLabelOutside: 'deep-purple-2',\n          backgroundDayLabelOutside: 'deep-purple-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'deep-purple-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'deep-purple-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'deep-purple-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'deep-purple-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'deep-purple-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'deep-purple-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'deep-purple-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'deep-purple-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'deep-purple-10'\n        },\n        {\n          name: 'indigo',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'indigo-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'indigo-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'indigo-10',\n          colorBodyCurrent: 'indigo-2',\n          backgroundBodyCurrent: 'indigo-10',\n          colorBodyFuture: 'indigo-2',\n          backgroundBodyFuture: 'indigo-10',\n          // header - weekly only\n          colorHeader: 'indigo-2',\n          backgroundHeader: 'indigo-10',\n          colorHeaderOutside: 'indigo-2',\n          backgroundHeaderOutside: 'indigo-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'indigo-10',\n          colorHeaderCurrent: 'indigo-2',\n          backgroundHeaderCurrent: 'indigo-10',\n          colorHeaderFuture: 'indigo-2',\n          backgroundHeaderFuture: 'indigo-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'indigo-8',\n          backgroundWorkWeekPast: 'indigo-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'indigo-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'indigo-10',\n          // label\n          colorDayLabelOutside: 'indigo-2',\n          backgroundDayLabelOutside: 'indigo-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'indigo-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'indigo-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'indigo-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'indigo-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'indigo-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'indigo-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'indigo-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'indigo-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'indigo-10'\n        },\n        {\n          name: 'blue',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-10',\n          colorBodyCurrent: 'blue-2',\n          backgroundBodyCurrent: 'blue-10',\n          colorBodyFuture: 'blue-2',\n          backgroundBodyFuture: 'blue-10',\n          // header - weekly only\n          colorHeader: 'blue-2',\n          backgroundHeader: 'blue-10',\n          colorHeaderOutside: 'blue-2',\n          backgroundHeaderOutside: 'blue-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-10',\n          colorHeaderCurrent: 'blue-2',\n          backgroundHeaderCurrent: 'blue-10',\n          colorHeaderFuture: 'blue-2',\n          backgroundHeaderFuture: 'blue-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-8',\n          backgroundWorkWeekPast: 'blue-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-10',\n          // label\n          colorDayLabelOutside: 'blue-2',\n          backgroundDayLabelOutside: 'blue-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-10'\n        }\n      ],\n      agenda: {\n        // value represents day of the week\n        1: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png',\n            desc: 'Meeting with CEO'\n          },\n          {\n            time: '08:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png',\n            desc: 'Meeting with HR'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg',\n            desc: 'Meeting with Karen'\n          }\n        ],\n        2: [\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg',\n            desc: 'Meeting with Alisha'\n          },\n          {\n            time: '17:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg',\n            desc: 'Meeting with Sarah'\n          }\n        ],\n        3: [\n          {\n            time: '08:00',\n            desc: 'Stand-up SCRUM',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '10:00',\n            desc: 'Sprint planning',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar1.jpg'\n          }\n        ],\n        4: [\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          }\n        ],\n        5: [\n          {\n            time: '08:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '09:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '09:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar4.jpg'\n          },\n          {\n            time: '10:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar5.jpg'\n          },\n          {\n            time: '11:30',\n            avatar: 'https://cdn.quasar.dev/img/material.png'\n          },\n          {\n            time: '13:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          },\n          {\n            time: '13:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar3.jpg'\n          },\n          {\n            time: '14:00',\n            avatar: 'https://cdn.quasar.dev/img/linux-avatar.png'\n          },\n          {\n            time: '14:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar.png'\n          },\n          {\n            time: '15:00',\n            avatar: 'https://cdn.quasar.dev/img/boy-avatar.png'\n          },\n          {\n            time: '15:30',\n            avatar: 'https://cdn.quasar.dev/img/avatar2.jpg'\n          },\n          {\n            time: '16:00',\n            avatar: 'https://cdn.quasar.dev/img/avatar6.jpg'\n          }\n        ]\n      }\n    }\n  },\n\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  },\n\n  methods: {\n    getAgenda (day) {\n      return this.agenda[parseInt(day.weekday, 10)]\n    }\n  }\n}\n<\/script>\n"},d9c7:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      short-interval-label\n      hour24-format\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},ddac:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"week\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n      class=\"calendar-container\"\n    >\n      <template #day-header=\"{ date }\">\n        <div class=\"row justify-center\">\n          <template v-for=\"(event, index) in eventsMap[date]\">\n            <q-badge\n              v-if=\"!event.time\"\n              :key=\"index\"\n              style=\"width: 100%; cursor: pointer;\"\n              :class=\"badgeClasses(event, 'header')\"\n              :style=\"badgeStyles(event, 'header')\"\n            >\n              <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n            </q-badge>\n            <q-badge\n              v-else\n              :key=\"index\"\n              class=\"q-ma-xs\"\n              :class=\"badgeClasses(event, 'header')\"\n              :style=\"badgeStyles(event, 'header')\"\n              style=\"width: 10px; max-width: 10px; height: 10px; max-height: 10px\"\n            />\n          </template>\n        </div>\n      </template>\n\n      <template #day-body=\"{ date, timeStartPos, timeDurationHeight }\">\n        <template v-for=\"(event, index) in getEvents(date)\">\n          <q-badge\n            v-if=\"event.time\"\n            :key=\"index\"\n            class=\"my-event justify-center\"\n            :class=\"badgeClasses(event, 'body')\"\n            :style=\"badgeStyles(event, 'body', timeStartPos, timeDurationHeight)\"\n          >\n            <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n          </q-badge>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\n// normally you would not import \"all\" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from 'ui' // ui is aliased from '@quasar/quasar-ui-qcalendar'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = QCalendar.parseDate(newDay)\n  return tm.date\n}\n\nconst reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/\n\nfunction textToRgb (color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  const m = reRGBA.exec(color)\n  if (m) {\n    const rgb = {\n      r: Math.min(255, parseInt(m[2], 10)),\n      g: Math.min(255, parseInt(m[3], 10)),\n      b: Math.min(255, parseInt(m[4], 10))\n    }\n    if (m[1]) {\n      rgb.a = Math.min(1, parseFloat(m[5]))\n    }\n    return rgb\n  }\n  return hexToRgb(color)\n}\n\nfunction hexToRgb (hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n\n  hex = hex.replace(/^#/, '')\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  } else if (hex.length === 4) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n  }\n\n  const num = parseInt(hex, 16)\n\n  return hex.length > 6\n    ? { r: num >> 24 & 255, g: num >> 16 & 255, b: num >> 8 & 255, a: Math.round((num & 255) / 2.55) }\n    : { r: num >> 16, g: num >> 8 & 255, b: num & 255 }\n}\n\nfunction luminosity (color) {\n  if (typeof color !== 'string' && (!color || color.r === void 0)) {\n    throw new TypeError('Expected a string or a {r, g, b} object as color')\n  }\n\n  const\n    rgb = typeof color === 'string' ? textToRgb(color) : color,\n    r = rgb.r / 255,\n    g = rgb.g / 255,\n    b = rgb.b / 255,\n    R = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4),\n    G = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4),\n    B = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4)\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(CURRENT_DAY.getDate()),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(CURRENT_DAY.getDate()),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(22),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(22),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(27),\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(29),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  computed: {\n    // convert the events into a map of lists keyed by date\n    eventsMap () {\n      const map = {}\n      this.events.forEach((event) => (map[event.date] = map[event.date] || []).push(event))\n      return map\n    }\n  },\n\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const currentDate = QCalendar.parsed(dt)\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = QCalendar.parsed(this.events[i].date + ' ' + this.events[i].time)\n              const endTime = QCalendar.addToDate(startTime, { minute: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = QCalendar.parsed(events[j].date + ' ' + events[j].time)\n                const endTime2 = QCalendar.addToDate(startTime2, { minute: events[j].duration })\n                if (QCalendar.isBetweenDates(startTime, startTime2, endTime2) || QCalendar.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = QCalendar.parsed(this.events[i].date)\n          const endDate = QCalendar.addToDate(startDate, { day: this.events[i].days })\n          if (QCalendar.isBetweenDates(currentDate, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n\n<style lang=\"sass\">\n  // this page\n  .calendar-container\n    position: relative\n\n  .my-event\n    width: 100%\n    position: absolute\n    font-size: 12px\n\n  .full-width\n    left: 0\n    width: 100%\n\n  .left-side\n    left: 0\n    width: 49.75%\n\n  .right-side\n    left: 50.25%\n    width: 49.75%\n  </style>\n"},dde7:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"scheduler\"\n      :resources=\"resources\"\n      :resource-height=\"50\"\n      locale=\"en-us\"\n      style=\"height: 400px;\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      resources: [\n        { label: 'John' },\n        { label: 'Mary' },\n        { label: 'Susan' },\n        { label: 'Olivia' },\n        { label: 'Board Room' },\n        { label: 'Room-1' },\n        { label: 'Room-2' }\n      ]\n    }\n  }\n}\n<\/script>\n"},e67b:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <div class=\"col-12 full-width q-pa-md\">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label=\"Change theme\"\n        v-model=\"theme\"\n        :options=\"themesList\"\n        class=\"col-12\"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"day\"\n      locale=\"en-us\"\n      enable-theme\n      :theme=\"theme\"\n      style=\"height: 400px;\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      theme: {},\n      themes: [\n        {\n          name: 'default'\n        },\n        {\n          name: 'dark',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-grey-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-grey-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-grey-10',\n          colorBodyCurrent: 'blue-grey-2',\n          backgroundBodyCurrent: 'blue-grey-10',\n          colorBodyFuture: 'blue-grey-2',\n          backgroundBodyFuture: 'blue-grey-10',\n          // header - weekly only\n          colorHeader: 'blue-grey-2',\n          backgroundHeader: 'blue-grey-10',\n          colorHeaderOutside: 'blue-grey-2',\n          backgroundHeaderOutside: 'blue-grey-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-grey-10',\n          colorHeaderCurrent: 'blue-grey-2',\n          backgroundHeaderCurrent: 'blue-grey-10',\n          colorHeaderFuture: 'blue-grey-2',\n          backgroundHeaderFuture: 'blue-grey-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-grey-8',\n          backgroundWorkWeekPast: 'blue-grey-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-grey-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-grey-10',\n          // label\n          colorDayLabelOutside: 'blue-grey-2',\n          backgroundDayLabelOutside: 'blue-grey-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-grey-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-grey-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-grey-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-grey-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-grey-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-grey-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-grey-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-grey-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-grey-10'\n        },\n        {\n          name: 'teal',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'teal-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'teal-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'teal-10',\n          colorBodyCurrent: 'teal-2',\n          backgroundBodyCurrent: 'teal-10',\n          colorBodyFuture: 'teal-2',\n          backgroundBodyFuture: 'teal-10',\n          // header - weekly only\n          colorHeader: 'teal-2',\n          backgroundHeader: 'teal-10',\n          colorHeaderOutside: 'teal-2',\n          backgroundHeaderOutside: 'teal-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'teal-10',\n          colorHeaderCurrent: 'teal-2',\n          backgroundHeaderCurrent: 'teal-10',\n          colorHeaderFuture: 'teal-2',\n          backgroundHeaderFuture: 'teal-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'teal-8',\n          backgroundWorkWeekPast: 'teal-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'teal-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'teal-10',\n          // label\n          colorDayLabelOutside: 'teal-2',\n          backgroundDayLabelOutside: 'teal-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'teal-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'teal-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'teal-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'teal-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'teal-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'teal-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'teal-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'teal-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'teal-10'\n        },\n        {\n          name: 'brown',\n          // body\n          colorBody: 'brown-2',\n          backgroundBody: 'brown-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'brown-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'brown-10',\n          colorBodyCurrent: 'brown-2',\n          backgroundBodyCurrent: 'brown-10',\n          colorBodyFuture: 'brown-2',\n          backgroundBodyFuture: 'brown-10',\n          // header - weekly only\n          colorHeader: 'brown-2',\n          backgroundHeader: 'brown-10',\n          colorHeaderOutside: 'brown-2',\n          backgroundHeaderOutside: 'brown-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'brown-10',\n          colorHeaderCurrent: 'brown-2',\n          backgroundHeaderCurrent: 'brown-10',\n          colorHeaderFuture: 'brown-2',\n          backgroundHeaderFuture: 'brown-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'brown-8',\n          backgroundWorkWeekPast: 'brown-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'brown-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'brown-10',\n          // label\n          colorDayLabelOutside: 'brown-2',\n          backgroundDayLabelOutside: 'brown-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'brown-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'brown-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'brown-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'brown-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'brown-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'brown-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'brown-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'brown-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'brown-10'\n        },\n        {\n          name: 'deep purple',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'deep-purple-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'deep-purple-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'deep-purple-10',\n          colorBodyCurrent: 'deep-purple-2',\n          backgroundBodyCurrent: 'deep-purple-10',\n          colorBodyFuture: 'deep-purple-2',\n          backgroundBodyFuture: 'deep-purple-10',\n          // header - weekly only\n          colorHeader: 'deep-purple-2',\n          backgroundHeader: 'deep-purple-10',\n          colorHeaderOutside: 'deep-purple-2',\n          backgroundHeaderOutside: 'deep-purple-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'deep-purple-10',\n          colorHeaderCurrent: 'deep-purple-2',\n          backgroundHeaderCurrent: 'deep-purple-10',\n          colorHeaderFuture: 'deep-purple-2',\n          backgroundHeaderFuture: 'deep-purple-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'deep-purple-8',\n          backgroundWorkWeekPast: 'deep-purple-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'deep-purple-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'deep-purple-10',\n          // label\n          colorDayLabelOutside: 'deep-purple-2',\n          backgroundDayLabelOutside: 'deep-purple-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'deep-purple-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'deep-purple-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'deep-purple-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'deep-purple-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'deep-purple-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'deep-purple-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'deep-purple-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'deep-purple-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'deep-purple-10'\n        },\n        {\n          name: 'indigo',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'indigo-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'indigo-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'indigo-10',\n          colorBodyCurrent: 'indigo-2',\n          backgroundBodyCurrent: 'indigo-10',\n          colorBodyFuture: 'indigo-2',\n          backgroundBodyFuture: 'indigo-10',\n          // header - weekly only\n          colorHeader: 'indigo-2',\n          backgroundHeader: 'indigo-10',\n          colorHeaderOutside: 'indigo-2',\n          backgroundHeaderOutside: 'indigo-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'indigo-10',\n          colorHeaderCurrent: 'indigo-2',\n          backgroundHeaderCurrent: 'indigo-10',\n          colorHeaderFuture: 'indigo-2',\n          backgroundHeaderFuture: 'indigo-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'indigo-8',\n          backgroundWorkWeekPast: 'indigo-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'indigo-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'indigo-10',\n          // label\n          colorDayLabelOutside: 'indigo-2',\n          backgroundDayLabelOutside: 'indigo-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'indigo-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'indigo-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'indigo-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'indigo-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'indigo-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'indigo-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'indigo-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'indigo-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'indigo-10'\n        },\n        {\n          name: 'blue',\n          // body\n          colorBody: 'grey-2',\n          backgroundBody: 'blue-8',\n          colorBodyOutside: 'grey-6',\n          backgroundBodyOutside: 'blue-9',\n          colorBodyPast: 'grey-11',\n          backgroundBodyPast: 'blue-10',\n          colorBodyCurrent: 'blue-2',\n          backgroundBodyCurrent: 'blue-10',\n          colorBodyFuture: 'blue-2',\n          backgroundBodyFuture: 'blue-10',\n          // header - weekly only\n          colorHeader: 'blue-2',\n          backgroundHeader: 'blue-10',\n          colorHeaderOutside: 'blue-2',\n          backgroundHeaderOutside: 'blue-10',\n          // header - for daily only\n          colorHeaderPast: 'grey-11',\n          backgroundHeaderPast: 'blue-10',\n          colorHeaderCurrent: 'blue-2',\n          backgroundHeaderCurrent: 'blue-10',\n          colorHeaderFuture: 'blue-2',\n          backgroundHeaderFuture: 'blue-10',\n          // work week - monthly only\n          colorWorkWeekPast: 'blue-8',\n          backgroundWorkWeekPast: 'blue-6',\n          colorWorkWeekCurrent: 'orange-4',\n          backgroundWorkWeekCurrent: 'blue-10',\n          colorWorkWeekFuture: 'yellow-4',\n          backgroundWorkWeekFuture: 'blue-10',\n          // label\n          colorDayLabelOutside: 'blue-2',\n          backgroundDayLabelOutside: 'blue-9',\n          colorDayLabelPast: 'yellow-4',\n          backgroundDayLabelPast: 'blue-10',\n          colorDayLabelCurrent: 'orange-4',\n          backgroundDayLabelCurrent: 'blue-10',\n          colorDayLabelFuture: 'yellow-4',\n          backgroundDayLabelFuture: 'blue-10',\n          // interval body\n          colorIntervalHeader: 'grey-2',\n          backgroundIntervalHeader: 'blue-10',\n          colorIntervalBody: 'grey-2',\n          backgroundIntervalBody: 'blue-10',\n          colorIntervalText: 'grey-2',\n          backgroundIntervalText: 'blue-10',\n          // scheduler body\n          colorSchedulerHeader: 'grey-2',\n          backgroundSchedulerHeader: 'blue-10',\n          colorSchedulerBody: 'grey-2',\n          backgroundSchedulerBody: 'blue-10',\n          colorSchedulerText: 'grey-2',\n          backgroundSchedulerText: 'blue-10'\n        }\n      ]\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n"},e945:function(e,n,r){"use strict";r.r(n),n["default"]="<template>\n  <div style=\"max-width: 800px; width: 100%;\">\n    <q-calendar\n      v-model=\"selectedDate\"\n      view=\"month\"\n      locale=\"en-us\"\n      :day-height=\"100\"\n    >\n      <template #week=\"{ week, weekdays, miniMode }\">\n        <template v-if=\"!miniMode\">\n          <template v-for=\"(computedEvent, index) in getWeekEvents(week, weekdays)\">\n            <q-badge\n              :key=\"index\"\n              class=\"q-row-event\"\n              :class=\"badgeClasses(computedEvent, 'day')\"\n              :style=\"badgeStyles(computedEvent, 'day', week.length)\"\n            >\n              <template v-if=\"computedEvent.event\">\n                <q-icon :name=\"computedEvent.event.icon\" class=\"q-mr-xs\"></q-icon>\n                <span class=\"ellipsis\">{{ computedEvent.event.title }}</span>\n              </template>\n            </q-badge>\n          </template>\n        </template>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\n// normally you would not import \"all\" of QCalendar, but is needed for this example to work with UMD (codepen)\nimport QCalendar from 'ui' // ui is aliased from '@quasar/quasar-ui-qcalendar'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = QCalendar.parseDate(newDay)\n  return tm.date\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      events: [\n        {\n          title: '1st of the Month',\n          color: 'orange',\n          start: getCurrentDay(1),\n          end: getCurrentDay(1)\n        },\n        {\n          title: 'Sisters Birthday',\n          color: 'green',\n          start: getCurrentDay(4),\n          end: getCurrentDay(4),\n          icon: 'cake'\n        },\n        {\n          title: 'Meeting',\n          color: 'red',\n          start: getCurrentDay(8),\n          end: getCurrentDay(8),\n          icon: 'group'\n        },\n        {\n          title: 'Lunch',\n          color: 'teal',\n          start: getCurrentDay(8),\n          end: getCurrentDay(8),\n          icon: 'free_breakfast'\n        },\n        {\n          title: 'Visit Mom',\n          color: 'blue-grey',\n          start: getCurrentDay(20),\n          end: getCurrentDay(20),\n          icon: 'card_giftcard'\n        },\n        {\n          title: 'Conference',\n          color: 'blue',\n          start: getCurrentDay(22),\n          end: getCurrentDay(22),\n          icon: 'ondemand_video'\n        },\n        {\n          title: 'Girlfriend',\n          color: 'teal',\n          start: getCurrentDay(22),\n          end: getCurrentDay(22),\n          icon: 'fastfood'\n        },\n        {\n          title: 'Rowing',\n          color: 'purple',\n          start: getCurrentDay(27),\n          end: getCurrentDay(28),\n          icon: 'rowing'\n        },\n        {\n          title: 'Vacation',\n          color: 'purple',\n          start: getCurrentDay(22),\n          end: getCurrentDay(29),\n          icon: 'flight'\n        }\n      ]\n    }\n  },\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (infoEvent, type) {\n      const color = infoEvent.event !== void 0 ? infoEvent.event.color : 'transparent'\n      const cssColor = this.isCssColor(color)\n      const isHeader = type === 'header'\n\n      return {\n        [`text-white bg-${color}`]: !cssColor,\n        'full-width': !isHeader && (!infoEvent.side || infoEvent.side === 'full'),\n        'left-side': !isHeader && infoEvent.side === 'left',\n        'right-side': !isHeader && infoEvent.side === 'right',\n        'cursor-pointer': infoEvent.event !== void 0,\n        'event-void': infoEvent.event === void 0 // height: 0, padding: 0\n      }\n    },\n\n    badgeStyles (infoEvent, type, weekLength, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (timeStartPos) {\n        s.top = timeStartPos(infoEvent.event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(infoEvent.event.duration) + 'px'\n      }\n      if (infoEvent.size !== void 0) {\n        s.width = ((100 / weekLength) * infoEvent.size) + '% !important'\n      }\n      // s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getWeekEvents (week, weekdays) {\n      const tsFirstDay = QCalendar.parsed(week[0].date + ' 00:00')\n      const tsLastDay = QCalendar.parsed(week[week.length - 1].date + ' 23:59')\n      const firstDay = QCalendar.getDayIdentifier(tsFirstDay)\n      const lastDay = QCalendar.getDayIdentifier(tsLastDay)\n\n      const eventsWeek = []\n      this.events.forEach((event, id) => {\n        const tsStartDate = QCalendar.parsed(event.start + ' 00:00')\n        const tsEndDate = QCalendar.parsed(event.end + ' 23:59')\n        const startDate = QCalendar.getDayIdentifier(tsStartDate)\n        const endDate = QCalendar.getDayIdentifier(tsEndDate)\n\n        if (this.isBetweenDatesWeek(startDate, endDate, firstDay, lastDay)) {\n          const left = QCalendar.daysBetween(tsFirstDay, tsStartDate, true)\n          const right = QCalendar.daysBetween(tsEndDate, tsLastDay, true)\n\n          eventsWeek.push({\n            id, // index event\n            left, // Position initial day [0-6]\n            right, // Number days available\n            size: week.length - (left + right), // Size current event (in days)\n            event // Info\n          })\n        }\n      })\n\n      const events = []\n      if (eventsWeek.length > 0) {\n        const infoWeek = eventsWeek.sort((a, b) => a.left - b.left)\n        infoWeek.forEach((event, i) => {\n          this.insertEvent(events, week.length, infoWeek, i, 0, 0)\n        })\n      }\n\n      return events\n    },\n\n    insertEvent (events, weekLength, infoWeek, index, availableDays, level) {\n      const iEvent = infoWeek[index]\n      if (iEvent !== void 0 && iEvent.left >= availableDays) {\n        // If you have space available, more events are placed\n        if (iEvent.left - availableDays) {\n          // It is filled with empty events\n          events.push({ size: iEvent.left - availableDays })\n        }\n        // The event is built\n        events.push({ size: iEvent.size, event: iEvent.event })\n\n        if (level !== 0) {\n          // If it goes into recursion, then the item is deleted\n          infoWeek.splice(index, 1)\n        }\n\n        const currentAvailableDays = iEvent.left + iEvent.size\n\n        if (currentAvailableDays < weekLength) {\n          const indexNextEvent = QCalendar.indexOf(infoWeek, e => e.id !== iEvent.id && e.left >= currentAvailableDays)\n\n          this.insertEvent(\n            events,\n            weekLength,\n            infoWeek,\n            indexNextEvent !== -1 ? indexNextEvent : index,\n            currentAvailableDays,\n            level + 1\n          )\n        } // else: There are no more days available, end of iteration\n      } else {\n        events.push({ size: weekLength - availableDays })\n        // end of iteration\n      }\n    },\n\n    isBetweenDates (date, start, end) {\n      return date >= start && date <= end\n    },\n\n    isBetweenDatesWeek (dateStart, dateEnd, weekStart, weekEnd) {\n      return (\n        (dateEnd < weekEnd && dateEnd >= weekStart) ||\n          dateEnd === weekEnd ||\n          (dateEnd > weekEnd && dateStart <= weekEnd)\n      )\n    }\n  }\n}\n<\/script>\n"},f2c8:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%; overflow: auto">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      :day-height="100"\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},f666:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="month"\n      locale="en-us"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},f695:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="scheduler"\n      :resources="resources"\n      locale="en-us"\n      style="height: 500px;"\n    >\n      <template #scheduler-resource-day="{ day, index, resource }">\n        <q-btn class="fit"><span class="ellipsis" style="font-size: 10px;">{{ resource.label }}:{{ day.day }}</span></q-btn>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      resources: [\n        { label: \'John\' },\n        { label: \'Mary\' },\n        { label: \'Susan\' },\n        { label: \'Olivia\' },\n        { label: \'Board Room\' },\n        { label: \'Room-1\' },\n        { label: \'Room-2\' }\n      ]\n    }\n  }\n}\n<\/script>\n'},fac8:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      view="day-agenda"\n      locale="en-us"\n      style="height: 400px;"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},fb03:function(e,n,r){"use strict";r.r(n),n["default"]='<template>\n  <div style="max-width: 800px; width: 100%;">\n    <q-calendar\n      v-model="selectedDate"\n      :column-header-before="true"\n      :column-header-after="true"\n      view="day"\n      locale="en-us"\n      style="height: 400px;"\n    >\n      \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n      <template #column-header-before="days">\n        <div class="q-ma-xs">\n          column-header-before slot\n        </div>\n      </template>\n      <template #column-header-after="days">\n        <div class="q-ma-xs">\n          column-header-ater slot\n        </div>\n      </template>\n    </q-calendar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'}}]);