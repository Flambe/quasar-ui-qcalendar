(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["295ef40a"],{"11bb":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="week"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"245a":function(e,t,n){},"250c":function(e,t,n){"use strict";var a=n("245a"),s=n.n(a);s.a},"2a77":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :column-header-before="true"\n    :column-header-after="true"\n    view="week"\n    locale="en-us"\n    style="height: 400px;"\n  >\n    \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n    <template #column-header-before="days">\n      <div class="q-ma-xs">\n        Before\n      </div>\n    </template>\n    <template #column-header-after="days">\n      <div class="q-ma-xs">\n        After\n      </div>\n    </template>\n  </q-calendar>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"6a80":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div>\n    <q-toolbar>\n      <q-btn stretch flat label="Prev" @click="calendarPrev" />\n      <q-separator vertical />\n      <q-btn stretch flat label="Next" @click="calendarNext" />\n      <q-space />\n    </q-toolbar>\n    <q-separator />\n    <div style="overflow: hidden">\n      <q-calendar\n        ref="calendar"\n        v-model="selectedDate"\n        view="week"\n        locale="en-us"\n        animated\n        transition-prev="slide-right"\n        transition-next="slide-left"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  },\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    }\n  }\n}\n<\/script>\n'},"74ba":function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"q-pa-md overflow-auto",attrs:{id:e.slugifiedTitle}},[n("q-card",{staticClass:"no-shadow",attrs:{flat:"",bordered:""}},[n("q-toolbar",[n("q-ribbon",{attrs:{position:"left",color:"rgba(0,0,0,.58)","background-color":"#c0c0c0","leaf-color":"#a0a0a0","leaf-position":"bottom",decoration:"rounded-out"}},[n("q-toolbar-title",{staticClass:"example-title",on:{click:function(t){return e.copyHeading(e.slugifiedTitle)}}},[n("span",{staticClass:"ellipsis"},[e._v(e._s(e.title))])])],1)],1),this.$slots.default?n("q-separator"):e._e(),this.$slots.default?n("q-card-section",[e._t("default")],2):e._e(),n("q-separator"),n("q-expansion-item",{attrs:{group:"someGroup",caption:"Code"}},[n("q-card",[n("q-tabs",{staticClass:"text-grey",attrs:{dense:"","active-color":"primary","indicator-color":"primary",align:"left","narrow-indicator":""},model:{value:e.tab,callback:function(t){e.tab=t},expression:"tab"}},[e.parts.template?n("q-tab",{attrs:{name:"template",label:"Template"}}):e._e(),e.parts.script?n("q-tab",{attrs:{name:"script",label:"Script"}}):e._e(),e.parts.style?n("q-tab",{attrs:{name:"style",label:"Style"}}):e._e()],1),n("q-separator"),n("q-tab-panels",{attrs:{animated:""},model:{value:e.tab,callback:function(t){e.tab=t},expression:"tab"}},[e.parts.template?n("q-tab-panel",{attrs:{name:"template"}},[n("q-markdown",{attrs:{src:e.parts.template}})],1):e._e(),e.parts.script?n("q-tab-panel",{attrs:{name:"script"}},[n("q-markdown",{attrs:{src:e.parts.script}})],1):e._e(),e.parts.style?n("q-tab-panel",{attrs:{name:"style"}},[n("q-markdown",{attrs:{src:e.parts.style}})],1):e._e()],1)],1)],1),n("q-separator"),n(e.name,{tag:"component",staticStyle:{overflow:"hidden"}})],1)],1)},s=[],i=(n("ac6a"),n("cadf"),n("06db"),n("456d"),n("8669")),r={name:"ExampleCard",props:{title:{type:String,required:!0},name:{type:String,required:!0},tagParts:{type:Object,default:function(){}}},data:function(){return{tab:"template",parts:{}}},mounted:function(){this.updateParts()},computed:{slugifiedTitle:function(){return Object(i["b"])(this.title)}},methods:{copyHeading:i["a"],updateParts:function(){var e=this;this.parts={},Object.keys(this.tagParts).forEach((function(t){""!==e.tagParts[t]&&(e.parts[t]="```\n"+e.tagParts[t]+"\n```")}))}}},o=r,l=n("2877"),d=Object(l["a"])(o,a,s,!1,null,null,null);t["a"]=d.exports},"81fd":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div style="overflow: hidden">\n    <q-calendar\n      ref="calendar"\n      v-model="selectedDate"\n      view="week"\n      locale="en-us"\n      v-touch-swipe.mouse.left.right="handleSwipe"\n      animated\n      transition-prev="slide-right"\n      transition-next="slide-left"\n    />\n  </div>\n</template>\n\n<script>\nimport { stopAndPrevent } from \'quasar/src/utils/event\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      dragging: false, // used for drag-and-drop\n      ignoreNextSwipe: false // used for drag-and-drop\n    }\n  },\n\n  methods: {\n    calendarNext () {\n      this.$refs.calendar.next()\n    },\n    calendarPrev () {\n      this.$refs.calendar.prev()\n    },\n    handleSwipe ({ evt, ...info }) {\n      if (this.dragging === false) {\n        if (info.duration >= 30 && this.ignoreNextSwipe === false) {\n          if (info.direction === \'right\') {\n            this.calendarPrev()\n          } else if (info.direction === \'left\') {\n            this.calendarNext()\n          }\n        } else {\n          this.ignoreNextSwipe = false\n        }\n      }\n      stopAndPrevent(evt)\n    }\n  }\n}\n<\/script>\n'},"84c7":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="week"\n    short-interval-label\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},8669:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s}));n("a481");function a(e){var t=window.location.origin+window.location.pathname+"#"+e,n=document.createElement("textarea");n.className="fixed-top",n.value=t,document.body.appendChild(n),n.focus(),n.select(),document.execCommand("copy"),document.body.removeChild(n),this.$q.notify({message:"Anchor has been copied to clipboard.",color:"white",textColor:"primary",icon:"done",position:"top",timeout:2e3})}function s(e){return encodeURIComponent(String(e).trim().replace(/\s+/g,"-"))}},8804:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="week"\n    short-weekday-label\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"8a2d":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5, 6, 0]"\n    view="week"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"8b09":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <div class="col-12">\n    <div class="col-12 full-width q-pa-md">\n      <q-select\n        outlined\n        dense\n        emit-value\n        map-options\n        label="Change theme"\n        v-model="theme"\n        :options="themesList"\n        class="col-12"\n      ></q-select>\n    </div>\n    <q-separator></q-separator>\n    <q-calendar\n      v-model="selectedDate"\n      view="week"\n      locale="en-us"\n      enable-theme\n      :theme="theme"\n    />\n  </div>\n</template>\n\n<script>\nimport themes from \'../statics/themes.js\'\n\nexport default {\n  data () {\n    return {\n      selectedDate: \'\',\n      theme: {},\n      themes\n    }\n  },\n  computed: {\n    themesList () {\n      const list = []\n      this.themes.forEach((theme) => {\n        list.push({\n          label: theme.name,\n          value: { ...theme }\n        })\n      })\n      return list\n    }\n  }\n}\n<\/script>\n'},9186:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    :weekdays="[1, 2, 3, 4, 5]"\n    view="week"\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},"9f44":function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n  ref="calendar"\n    v-model="currentDate"\n    view="week"\n    locale="en-us"\n    style="height: 400px;"\n  >\n    \x3c!-- eslint-disable vue/no-unused-vars --\x3e\n    <template #day-container="{ date }">\n      <div class="week-view-current-time-indicator" :style="style" />\n      <div class="week-view-current-time-line" :style="style" />\n    </template>\n  </q-calendar>\n</template>\n\n<script>\nimport {\n  parseDate\n} from \'ui\' // ui is aliased from \'@quasar/quasar-ui-qcalendar\'\n\nexport default {\n  data () {\n    return {\n      currentDate: void 0,\n      currentTime: void 0,\n      intervalId: null,\n      timeStartPos: 0\n    }\n  },\n\n  mounted () {\n    this.adjustCurrentTime()\n    // now, adjust the time every minute\n    this.intervalId = setInterval(() => {\n      this.adjustCurrentTime()\n    }, 60000)\n  },\n\n  beforeDestroy () {\n    clearInterval(this.intervalId)\n  },\n\n  computed: {\n    style () {\n      return {\n        top: this.timeStartPos + \'px\'\n      }\n    }\n  },\n\n  methods: {\n    adjustCurrentTime () {\n      const now = new Date()\n      const p = parseDate(now)\n      this.currentDate = p.date\n      this.currentTime = p.time\n      this.timeStartPos = this.$refs.calendar.timeStartPos(this.currentTime)\n    }\n  }\n}\n<\/script>\n\n<style lang="sass">\n.week-view-current-time-indicator\n  position: absolute\n  left: 45px\n  height: 10px\n  width: 10px\n  margin-top: -4px\n  background-color: rgba(0, 0, 255, .5)\n  border-radius: 50%\n\n.week-view-current-time-line\n  position: absolute\n  left: 55px\n  border-top: rgba(0, 0, 255, .5) 2px solid\n  width: calc(100% - 50px - 5px)\n\n.body--dark\n  .week-view-current-time-indicator\n    background-color: rgba(255, 255, 0, .85)\n\n  .week-view-current-time-line\n    border-top: rgba(255, 255, 0, .85) 2px solid\n\n</style>\n'},a882:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="week"\n    locale="en-us"\n    now\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},a96e:function(e,t,n){"use strict";n.r(t),t["default"]="<template>\n  <q-calendar\n    v-model=\"selectedDate\"\n    view=\"week\"\n    :disabled-days=\"disabledDays\"\n    :interval-style=\"modifiedStyle\"\n    locale=\"en-us\"\n    style=\"height: 400px;\"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: '2019-04-01',\n      disabledDays: [\n        '2019-04-02',\n        '2019-04-03',\n        '2019-04-04',\n        '2019-04-05'\n      ]\n    }\n  },\n  methods: {\n    modifiedStyle (scope) {\n      if (scope.disabled === true) {\n        return {\n          backgroundColor: '#ffcb9c!important'\n        }\n      }\n      return {}\n    }\n  }\n}\n<\/script>\n"},ad05:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="week"\n    hour24-format\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},bd06:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"q-markdown"},[a("example-title",{attrs:{title:"Week View"}}),a("example-card",{attrs:{title:"Basic",name:"WeekViewBasic","tag-parts":e.getTagParts(n("11bb").default)}}),a("example-card",{attrs:{title:"First Day Monday",name:"WeekViewMondayFirstDay","tag-parts":e.getTagParts(n("8a2d").default)}}),a("example-card",{attrs:{title:"5 Day Work Week",name:"WeekViewFiveDayWorkWeek","tag-parts":e.getTagParts(n("9186").default)}}),a("example-card",{attrs:{title:"Disabled Days",name:"WeekViewDisabledDays","tag-parts":e.getTagParts(n("a96e").default)}},[a("q-markdown",[e._v("\nWhen the property `disabled-days` has an array of disabled days, you can hook into the `interval-style` property to change the background color of the disabled day.\n      ")])],1),a("example-card",{attrs:{title:"Now",name:"WeekViewNow","tag-parts":e.getTagParts(n("a882").default)}},[a("q-markdown",[e._v("\nYou can use the `now` property to set a fixed date, otherwise the current date will be used. If the `v-model` property is empty, then it will receive the `now` property's value.\n      ")])],1),a("example-card",{attrs:{title:"Short Weekday Label",name:"WeekViewShortWeekdayLabel","tag-parts":e.getTagParts(n("8804").default)}}),a("example-card",{attrs:{title:"Hour24 Format",name:"WeekViewHour24Format","tag-parts":e.getTagParts(n("ad05").default)}},[a("q-markdown",[e._v("\n`hour24-format` is available only for one of the available `day` or `week` views.\n      ")])],1),a("example-card",{attrs:{title:"Short Interval Label",name:"WeekViewShortIntervalLabel","tag-parts":e.getTagParts(n("84c7").default)}},[a("q-markdown",[e._v("\n`short-interval-label` is available only for one of the available `day` or `week` views.\n      ")])],1),a("example-card",{attrs:{title:"Short Interval Label (Hour24Format)",name:"WeekViewShortIntervalLabelHour24Format","tag-parts":e.getTagParts(n("d9c7").default)}}),a("example-card",{attrs:{title:"Prev/Next",name:"WeekViewPrevNext","tag-parts":e.getTagParts(n("6a80").default)}}),a("example-card",{attrs:{title:"Swipe",name:"WeekViewSwipe","tag-parts":e.getTagParts(n("81fd").default)}}),a("example-card",{attrs:{title:"Column Header",name:"WeekViewColumnHeader","tag-parts":e.getTagParts(n("2a77").default)}}),a("example-card",{attrs:{title:"Slots",name:"WeekViewSlots","tag-parts":e.getTagParts(n("ddac").default)}},[a("q-markdown",[e._v("\nFor slots that return `day` or `timestamp`, it looks like this:\n```js\n{\n  date: '',       // YYYY-mm-dd\n  time: '',       // 00:00:00 (optional)\n  year: 0,        // YYYY\n  month: 0,       // mm (Jan = 1, etc)\n  day: 0,         // day of the month\n  weekday: 0,     // week day\n  hour: 0,        // 24-hr\n  minute: 0,      // mm\n  doy: 0,         // day of year\n  workweek: 0,    // workweek number\n  hasDay: false,  // if this timestamp is supposed to have a date\n  hasTime: false, // if this timestamp is supposed to have a time\n  past: false,    // if timestamp is in the past (based on `now` property)\n  current: false, // if timestamp is current date (based on `now` property)\n  future: false,  // if timestamp is in the future (based on `now` property)\n  disabled: false // if timestamp is disabled\n}\n```\n\nYou can use the slots `day-header` and `day-body` to control visual aspects of your event system.\nThe example below is using the `day-header` slot to indicate there are events on that day, in case it is not visible, indicating to the user they should scroll down to see the event.\nThe `day-body` slot is used to get information about the date and time of an event and then to calculate where the absolute position of the event based on passed in functions `timeStartPos` and `timeDurationHeight`.\n      ")])],1),a("example-title",{attrs:{title:"More Slots"}}),a("example-card",{attrs:{title:"Week View (Current Time) - Slot (day-container)",name:"WeekViewCurrentTime","tag-parts":e.getTagParts(n("9f44").default)}},[a("q-markdown",[e._v("\nYou can use the scopedSlot `day-container` to set an absolute position for a time tracking bar.\nScroll down if the current time is later for your location to see the example.\n      ")])],1),a("example-card",{attrs:{title:"Theme",name:"WeekViewTheme","tag-parts":e.getTagParts(n("8b09").default)}})],1)},s=[],i=n("fe7d"),r=n("74ba"),o=n("8669"),l=n("ad53"),d={name:"WeekView",components:{ExampleTitle:i["a"],ExampleCard:r["a"]},data:function(){return{tempToc:[]}},mounted:function(){this.toc=[],this.tempToc=[],this.addToToc("Week View"),this.addToToc("Basic",2),this.addToToc("First Day Monday",2),this.addToToc("5 Day Work Week",2),this.addToToc("Disabled Days",2),this.addToToc("Now",2),this.addToToc("Short Weekday Label",2),this.addToToc("Hour24 Format",2),this.addToToc("Short Interval Label",2),this.addToToc("Short Interval Label (Hour24Format)",2),this.addToToc("Prev/Next",2),this.addToToc("Swipe",2),this.addToToc("Column Header",2),this.addToToc("Slots",2),this.addToToc("Week View (Current Time) - Slot (day-container)",2),this.addToToc("Theme",2),this.toc=this.tempToc},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{getTagParts:l["c"],addToToc:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=Object(o["b"])(e);this.tempToc.push({children:[],id:n,label:e,level:t})}}},c=d,p=(n("250c"),n("2877")),m=Object(p["a"])(c,a,s,!1,null,null,null);t["default"]=m.exports},d9c7:function(e,t,n){"use strict";n.r(t),t["default"]='<template>\n  <q-calendar\n    v-model="selectedDate"\n    view="week"\n    short-interval-label\n    hour24-format\n    locale="en-us"\n    style="height: 400px;"\n  />\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      selectedDate: \'\'\n    }\n  }\n}\n<\/script>\n'},ddac:function(e,t,n){"use strict";n.r(t),t["default"]="<template>\n  <q-calendar\n    v-model=\"selectedDate\"\n    view=\"week\"\n    locale=\"en-us\"\n    style=\"height: 400px;\"\n    class=\"calendar-container\"\n  >\n    <template #day-header=\"{ date }\">\n      <div class=\"row justify-center\">\n        <template v-for=\"(event, index) in eventsMap[date]\">\n          <q-badge\n            v-if=\"!event.time\"\n            :key=\"index\"\n            style=\"width: 100%; cursor: pointer;\"\n            :class=\"badgeClasses(event, 'header')\"\n            :style=\"badgeStyles(event, 'header')\"\n          >\n            <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n          </q-badge>\n          <q-badge\n            v-else\n            :key=\"index\"\n            class=\"q-ma-xs\"\n            :class=\"badgeClasses(event, 'header')\"\n            :style=\"badgeStyles(event, 'header')\"\n            style=\"width: 10px; max-width: 10px; height: 10px; max-height: 10px\"\n          />\n        </template>\n      </div>\n    </template>\n\n    <template #day-body=\"{ date, timeStartPos, timeDurationHeight }\">\n      <template v-for=\"(event, index) in getEvents(date)\">\n        <q-badge\n          v-if=\"event.time\"\n          :key=\"index\"\n          class=\"my-event justify-center\"\n          :class=\"badgeClasses(event, 'body')\"\n          :style=\"badgeStyles(event, 'body', timeStartPos, timeDurationHeight)\"\n        >\n          <q-icon v-if=\"event.icon\" :name=\"event.icon\" class=\"q-mr-xs\"></q-icon><span class=\"ellipsis\">{{ event.title }}</span>\n        </q-badge>\n      </template>\n    </template>\n  </q-calendar>\n</template>\n\n<script>\nimport { date, colors } from 'quasar'\n\nimport {\n  parseDate,\n  makeDateTime,\n  parsed\n} from 'ui' // ui is aliased from '@quasar/quasar-ui-qcalendar'\n\nconst CURRENT_DAY = new Date()\n\nfunction getCurrentDay (day) {\n  const newDay = new Date(CURRENT_DAY)\n  newDay.setDate(day)\n  const tm = parseDate(newDay)\n  return tm.date\n}\n\nexport default {\n  data () {\n    return {\n      selectedDate: '',\n      events: [\n        {\n          title: '1st of the Month',\n          details: 'Everything is funny as long as it is happening to someone else',\n          date: getCurrentDay(1),\n          bgcolor: 'orange'\n        },\n        {\n          title: 'Sisters Birthday',\n          details: 'Buy a nice present',\n          date: getCurrentDay(4),\n          bgcolor: 'green',\n          icon: 'fas fa-birthday-cake'\n        },\n        {\n          title: 'Meeting',\n          details: 'Time to pitch my idea to the company',\n          date: getCurrentDay(CURRENT_DAY.getDate()),\n          time: '10:00',\n          duration: 120,\n          bgcolor: 'red',\n          icon: 'fas fa-handshake'\n        },\n        {\n          title: 'Lunch',\n          details: 'Company is paying!',\n          date: getCurrentDay(CURRENT_DAY.getDate()),\n          time: '11:30',\n          duration: 90,\n          bgcolor: 'teal',\n          icon: 'fas fa-hamburger'\n        },\n        {\n          title: 'Visit mom',\n          details: 'Always a nice chat with mom',\n          date: getCurrentDay(20),\n          time: '17:00',\n          duration: 90,\n          bgcolor: 'blue-grey',\n          icon: 'fas fa-car'\n        },\n        {\n          title: 'Conference',\n          details: 'Teaching Javascript 101',\n          date: getCurrentDay(22),\n          time: '08:00',\n          duration: 540,\n          bgcolor: 'blue',\n          icon: 'fas fa-chalkboard-teacher'\n        },\n        {\n          title: 'Girlfriend',\n          details: 'Meet GF for dinner at Swanky Restaurant',\n          date: getCurrentDay(22),\n          time: '19:00',\n          duration: 180,\n          bgcolor: 'teal',\n          icon: 'fas fa-utensils'\n        },\n        {\n          title: 'Fishing',\n          details: 'Time for some weekend R&R',\n          date: getCurrentDay(27),\n          bgcolor: 'purple',\n          icon: 'fas fa-fish',\n          days: 2\n        },\n        {\n          title: 'Vacation',\n          details: 'Trails and hikes, going camping! Don\\'t forget to bring bear spray!',\n          date: getCurrentDay(29),\n          bgcolor: 'purple',\n          icon: 'fas fa-plane',\n          days: 5\n        }\n      ]\n    }\n  },\n  computed: {\n    // convert the events into a map of lists keyed by date\n    eventsMap () {\n      const map = {}\n      this.events.forEach((event) => (map[event.date] = map[event.date] || []).push(event))\n      return map\n    }\n  },\n\n  methods: {\n    isCssColor (color) {\n      return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n    },\n\n    badgeClasses (event, type) {\n      const cssColor = this.isCssColor(event.bgcolor)\n      const isHeader = type === 'header'\n      return {\n        [`text-white bg-${event.bgcolor}`]: !cssColor,\n        'full-width': !isHeader && (!event.side || event.side === 'full'),\n        'left-side': !isHeader && event.side === 'left',\n        'right-side': !isHeader && event.side === 'right'\n      }\n    },\n\n    badgeStyles (event, type, timeStartPos, timeDurationHeight) {\n      const s = {}\n      if (this.isCssColor(event.bgcolor)) {\n        s['background-color'] = event.bgcolor\n        s.color = colors.luminosity(event.bgcolor) > 0.5 ? 'black' : 'white'\n      }\n      if (timeStartPos) {\n        s.top = timeStartPos(event.time) + 'px'\n      }\n      if (timeDurationHeight) {\n        s.height = timeDurationHeight(event.duration) + 'px'\n      }\n      s['align-items'] = 'flex-start'\n      return s\n    },\n\n    getEvents (dt) {\n      const events = []\n      for (let i = 0; i < this.events.length; ++i) {\n        let added = false\n        if (this.events[i].date === dt) {\n          if (this.events[i].time) {\n            if (events.length > 0) {\n              // check for overlapping times\n              const startTime = makeDateTime(parsed(this.events[i].date + ' ' + this.events[i].time))\n              const endTime = date.addToDate(startTime, { minutes: this.events[i].duration })\n              for (let j = 0; j < events.length; ++j) {\n                const startTime2 = makeDateTime(parsed(events[j].date + ' ' + events[j].time))\n                const endTime2 = date.addToDate(startTime2, { minutes: events[j].duration })\n                if (date.isBetweenDates(startTime, startTime2, endTime2) || date.isBetweenDates(endTime, startTime2, endTime2)) {\n                  events[j].side = 'left'\n                  this.events[i].side = 'right'\n                  events.push(this.events[i])\n                  added = true\n                  break\n                }\n              }\n            }\n          }\n          if (!added) {\n            this.events[i].side = void 0\n            events.push(this.events[i])\n          }\n        } else if (this.events[i].days) {\n          // check for overlapping dates\n          const startDate = makeDateTime(parsed(this.events[i].date))\n          const endDate = date.addToDate(startDate, { days: this.events[i].days })\n          if (date.isBetweenDates(dt, startDate, endDate)) {\n            events.push(this.events[i])\n            added = true\n          }\n        }\n      }\n      return events\n    }\n  }\n}\n<\/script>\n\n<style lang=\"sass\">\n  // this page\n  .calendar-container\n    position: relative\n\n  .my-event\n    width: 100%\n    position: absolute\n    font-size: 12px\n\n  .full-width\n    left: 0\n    width: 100%\n\n  .left-side\n    left: 0\n    width: 49.75%\n\n  .right-side\n    left: 50.25%\n    width: 49.75%\n  </style>\n"},fe7d:function(e,t,n){"use strict";var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h1",{staticClass:"q-markdown--heading-h1 q-markdown--title-heavy example-title",attrs:{id:e.slugifiedTitle},on:{click:function(t){return e.copyHeading(e.slugifiedTitle)}}},[e._v(e._s(e.title))])},s=[],i=n("8669"),r={name:"ExampleTitle",props:{title:{type:String,required:!0}},computed:{slugifiedTitle:function(){return Object(i["b"])(this.title)}},methods:{copyHeading:i["a"]}},o=r,l=n("2877"),d=Object(l["a"])(o,a,s,!1,null,null,null);t["a"]=d.exports}}]);